-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Servidor: localhost:3306
-- Tiempo de generación: 30-05-2023 a las 19:37:11
-- Versión del servidor: 8.0.30
-- Versión de PHP: 8.2.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `mi_codigo`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `codigos`
--

CREATE TABLE `codigos` (
  `id` int NOT NULL,
  `titulo` varchar(120) NOT NULL,
  `descripcion` varchar(200) NOT NULL,
  `codigo` text NOT NULL,
  `lenguaje_id` int NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Volcado de datos para la tabla `codigos`
--

INSERT INTO `codigos` (`id`, `titulo`, `descripcion`, `codigo`, `lenguaje_id`, `created_at`, `updated_at`) VALUES
(1, 'variable', 'variables de diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;// usar $ para declarar variables&#13;&#10;$nombre = &#39;Roberto&#39;;&#13;&#10;$apellido = &#39;sotelo&#39;;&#13;&#10;echo &#34;$var, $Var&#34;;      // imprime &#34;Roberto, Juan&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;js&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;// usar let para declarar variables&#13;&#10;let nombre = &#39;Roberto&#39;;&#13;&#10;let apellido = &#39;sotelo&#39;;&#13;&#10;console.log(nombre);&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 00:30:18', '2022-11-07 13:11:43'),
(3, 'constante', 'constantes en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;// define para declarar constante&#13;&#10;define(&#39;LOCATOR&#39;,   &#34;/locator&#34;);&#13;&#10;var_dump(LOCATOR);  // imprime string(8) &#34;/locator&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;// usar const para declarar constante&#13;&#10;const LOCATOR = &#34;/locator&#34;;&#13;&#10;console.log(LOCATOR);  // imprime &#34;/locator&#34;&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 01:09:16', '2022-11-07 13:13:38'),
(4, 'incremento', 'forma de incrementar en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;// incremento++ decremento-- (solo uno en uno)&#13;&#10;$numero = 100;&#13;&#10;$numero++;&#13;&#10;echo $numero; // imprime 101&#13;&#10;&#13;&#10;$numero1 = 200;&#13;&#10;$numero1 += 10;&#13;&#10;echo $numero1; // imprime 210&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;// incremento++ decremento-- (solo uno en uno)&#13;&#10;let numero = 100;&#13;&#10;numero++;&#13;&#10;console.log(numero);  // imprime 101&#13;&#10;&#13;&#10;let numero1 = 200;&#13;&#10;numero1 += 10;&#13;&#10;console.log(numero1);   // imprime 210&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:15:28', NULL),
(5, 'Funciones para string', 'diversas funciones para string en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;$nombre = &#39;  Carlos Tucno  &#39;;&#13;&#10;&#13;&#10;//contar los caracteres de una cadena&#13;&#10;echo strlen($nombre);  //imprime 13&#13;&#10;&#13;&#10;//eliminar espacio de la cadena&#13;&#10;echo trim($nombre); //imprime &#39;Carlos Tucno&#39;&#13;&#10;&#13;&#10;//convertir a mayuscula&#13;&#10;echo strtoupper($nombre); //imprime &#39;CARLOS TUCNO&#39;&#13;&#10;&#13;&#10;//convertir a minuscula&#13;&#10;echo strtolower($nombre); //imprime &#39;carlos tucno&#39;&#13;&#10;&#13;&#10;//reemplazar una cadena por otra&#13;&#10;echo str_replace(&#39;Carlos&#39;, &#39;Juan&#39;, $nombre); //imprime &#39;Juan tucno&#39;&#13;&#10;&#13;&#10;//revisar si un string existe&#13;&#10;echo strpos($nombre, &#39;Carlos&#39;); //imprime 2&#13;&#10;&#13;&#10;//concatenar cadenas&#13;&#10;echo $nombre . &#39; &#39; . &#39;Vasquez&#39;; //imprime &#39;Carlos Tucno vasquez&#39;&#13;&#10;//similar a un temple string, obligatorio las comillas dobles&#13;&#10;echo &#34;{$nombre} Vasquez&#34;; //imprime &#39;Carlos Tucno Vasquez&#39;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;let nombre = &#39;  Carlos Tucno  &#39;;&#13;&#10;&#13;&#10;//contar los caracteres de una cadena&#13;&#10;console.log(nombre.length);&#13;&#10;&#13;&#10;//eliminar espacio de la cadena&#13;&#10;console.log(nombre.trim());&#13;&#10;&#13;&#10;//convertir a mayuscula&#13;&#10;console.log(nombre.toUpperCase());&#13;&#10;&#13;&#10;//convertir a minuscula&#13;&#10;console.log(nombre.toLowerCase());&#13;&#10;&#13;&#10;//reemplazar una cadena por otra&#13;&#10;console.log(nombre.replace(&#39;Carlos&#39;, &#39;Juan&#39;));&#13;&#10;&#13;&#10;//revisar si un string existe&#13;&#10;console.log(nombre.indexOf(&#39;Carlos&#39;));&#13;&#10;&#13;&#10;//concatenar cadenas&#13;&#10;console.log(nombre + &#39; &#39; + &#39;Vasquez&#39;);&#13;&#10;//temple string, obligatorio tildes invertidas alt+96 &#13;&#10;console.log(`${nombre} Vasquez`);&#13;&#10;&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:17:17', NULL),
(6, 'Array Indexado', 'array y algunos metodos en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//array indexado&#13;&#10;$alumnos = array(&#39;Juan&#39;, &#39;Pedro&#39;, &#39;Maria&#39;, &#39;Luis&#39;, &#39;Ana&#39;);&#13;&#10;var_dump($alumnos);&#13;&#10;&#13;&#10;//agregar la lista de alumnos&#13;&#10;$alumnos[5] = &#39;xxx&#39;;&#13;&#10;var_dump($alumnos);&#13;&#10;&#13;&#10;//añadir un nuevo alumno al finalizar el array&#13;&#10;$alumnos[] = &#39;yyy&#39;;&#13;&#10;var_dump($alumnos);&#13;&#10;&#13;&#10;//array_push() agrega un nuevo elemento al final del array&#13;&#10;array_push($alumnos, &#39;zzz&#39;);&#13;&#10;var_dump($alumnos);&#13;&#10;&#13;&#10;//array_unshift agrega un nuevo elemento al principio del array&#13;&#10;array_unshift($alumnos, &#39;aaa&#39;);&#13;&#10;var_dump($alumnos);&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//array indexado&#13;&#10;let alumnos = [&#39;Juan&#39;, &#39;Pedro&#39;, &#39;Maria&#39;, &#39;Luis&#39;, &#39;Ana&#39;];&#13;&#10;console.log(alumnos);&#13;&#10;&#13;&#10;//agregar la lista de alumnos&#13;&#10;alumnos[5] = &#39;xxx&#39;;&#13;&#10;console.log(alumnos);&#13;&#10;&#13;&#10;//añadir un nuevo alumno al finalizar el array&#13;&#10;alumnos.push(&#39;yyy&#39;);&#13;&#10;console.log(alumnos);&#13;&#10;&#13;&#10;//unshift agrega un nuevo elemento al principio del array&#13;&#10;alumnos.unshift(&#39;aaa&#39;);&#13;&#10;console.log(alumnos);&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:19:01', NULL),
(7, 'Array Asociativo / objeto literal', 'tipos de arrar (objeto) en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//array asociativo&#13;&#10;$persona = [&#13;&#10;    &#39;nombre&#39; =&#38;gt; &#39;Juan&#39;,&#13;&#10;    &#39;apellido&#39; =&#38;gt; &#39;Perez&#39;,&#13;&#10;    &#39;edad&#39; =&#38;gt; &#39;25&#39;,&#13;&#10;    &#39;estado&#39; =&#38;gt; [&#13;&#10;        &#39;ciudad&#39; =&#38;gt; &#39;Ciudad de Mexico&#39;,&#13;&#10;        &#39;pais&#39; =&#38;gt; &#39;Mexico&#39;&#13;&#10;    ]&#13;&#10;];&#13;&#10;&#13;&#10;//ver array asociativo&#13;&#10;var_dump($persona);&#13;&#10;&#13;&#10;//imprimir solo una parte del array asociativo (propiedad)&#13;&#10;echo $persona[&#39;nombre&#39;];&#13;&#10;&#13;&#10;//imprimir solo una parte del array asociativo&#13;&#10;//(propiedad dentro de otro array)&#13;&#10;echo $persona[&#39;estado&#39;][&#39;ciudad&#39;];&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto literal similar array asociativo php&#13;&#10;const persona = {&#13;&#10;    nombre: &#39;Juan&#39;,&#13;&#10;    apellido: &#39;Perez&#39;,&#13;&#10;    edad: &#39;25&#39;,&#13;&#10;    estado: {&#13;&#10;        ciudad: &#39;Ciudad de Mexico&#39;,&#13;&#10;        pais: &#39;Mexico&#39;&#13;&#10;    }&#13;&#10;};&#13;&#10;//ver objeto literal&#13;&#10;console.log(persona);&#13;&#10;&#13;&#10;//imprimir solo una parte del objeto literal&#13;&#10;console.log(persona.nombre);&#13;&#10;&#13;&#10;//imprimir solo una parte del objeto literal&#13;&#10;console.log(persona.estado.ciudad);&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:20:20', NULL),
(8, 'existe / vacio / arreglo / propiedad', 'si un arrego esta vacio existe', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//array asociativo&#13;&#10;$vacio = [];&#13;&#10;$persona = [&#13;&#10;    &#39;nombre&#39; =&#38;gt; &#39;Juan&#39;,&#13;&#10;    &#39;apellido&#39; =&#38;gt; &#39;Perez&#39;,&#13;&#10;];&#13;&#10;&#13;&#10;//empty = verifica si una array esta vacia&#13;&#10;var_dump(empty($vacio));&#13;&#10;&#13;&#10;//isset  = verifica que el arrego exista y su propiedad&#13;&#10;var_dump(isset($persona));&#13;&#10;var_dump(isset($persona[&#39;nombre&#39;]));&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto literal&#13;&#10;const vacio = {}&#13;&#10;const persona = {&#13;&#10;    nombre: &#39;Juan&#39;,&#13;&#10;    apellido: &#39;Perez&#39;,&#13;&#10;}&#13;&#10;&#13;&#10;//verifica si el objeto esta vacio&#13;&#10;console.log(Object.keys(vacio).length === 0);&#13;&#10;&#13;&#10;//verifica si la propiedad existe&#13;&#10;console.log(&#39;nombre&#39; in persona);&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:22:14', NULL),
(9, 'Condicional IF', 'Condicional IF en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;$client = [&#13;&#10;    &#39;name&#39; =&#38;gt; &#39;Juan&#39;,&#13;&#10;    &#39;age&#39; =&#38;gt; &#39;25&#39;,&#13;&#10;    &#39;email&#39; =&#38;gt; &#39;aa@aa.com&#39;&#13;&#10;];&#13;&#10;&#13;&#10;//if anidado&#13;&#10;if (isset($client[&#39;age&#39;])) {&#13;&#10;    if ($client[&#39;age&#39;] &#38;gt;= 18) {&#13;&#10;        echo &#39;Es mayor de edad&#39;;&#13;&#10;    } else {&#13;&#10;        echo &#39;Es menor de edad&#39;;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//else if&#13;&#10;if (isset($client[&#39;age&#39;])) {&#13;&#10;    if ($client[&#39;age&#39;] &#38;gt;= 18) {&#13;&#10;        echo &#39;Es mayor de edad&#39;;&#13;&#10;    } elseif ($client[&#39;age&#39;] &#38;gt;= 13 &#38;amp;&#38;amp; $client[&#39;age&#39;] &#38;lt; 18) {&#13;&#10;        echo &#39;Es adolescente&#39;;&#13;&#10;    } else {&#13;&#10;        echo &#39;Es menor de edad&#39;;&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const client = {&#13;&#10;    name: &#39;Juan&#39;,&#13;&#10;    age: 25,&#13;&#10;    email: &#39;aa@aa.com&#39;&#13;&#10;}&#13;&#10;&#13;&#10;//if dentro de otro if&#13;&#10;if (Object.keys(client).length != 0) {&#13;&#10;    if (client.age &#38;gt;= 18) {&#13;&#10;        console.log(&#39;Es mayor de edad&#39;);&#13;&#10;    } else {&#13;&#10;        console.log(&#39;Es menor de edad&#39;);&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//else if&#13;&#10;if (Object.keys(client).length != 0) {&#13;&#10;    if (client.age &#38;gt;= 18) {&#13;&#10;        console.log(&#39;Es mayor de edad&#39;);&#13;&#10;    } else if (client.age &#38;gt;= 13 &#38;amp;&#38;amp; client.age &#38;lt; 18) {&#13;&#10;        console.log(&#39;Es adolescente&#39;);&#13;&#10;    } else {&#13;&#10;        console.log(&#39;Es menor de edad&#39;);&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:23:44', NULL),
(10, 'Condicional SWITCH', 'Condicional SWITCH en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;$client = [&#13;&#10;    &#39;name&#39; =&#38;gt; &#39;Juan&#39;,&#13;&#10;    &#39;age&#39; =&#38;gt; &#39;25&#39;,&#13;&#10;    &#39;email&#39; =&#38;gt; &#39;aa@aa.com&#39;&#13;&#10;];&#13;&#10;&#13;&#10;//switch&#13;&#10;switch ($client[&#39;age&#39;]) {&#13;&#10;    case &#39;25&#39;:&#13;&#10;        echo &#39;Es mayor de edad&#39;;&#13;&#10;        break;&#13;&#10;    case &#39;18&#39;:&#13;&#10;        echo &#39;Es menor de edad&#39;;&#13;&#10;        break;&#13;&#10;    default:&#13;&#10;        echo &#39;No es mayor de edad ni menor de edad&#39;;&#13;&#10;        break;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const client = {&#13;&#10;    name: &#39;Juan&#39;,&#13;&#10;    age: 25,&#13;&#10;    email: &#39;aa@aa.com&#39;&#13;&#10;}&#13;&#10;&#13;&#10;//switch&#13;&#10;switch (client.age) {&#13;&#10;    case 25:&#13;&#10;        console.log(&#39;Es mayor de edad&#39;);&#13;&#10;        break;&#13;&#10;    case 18:&#13;&#10;        console.log(&#39;Es menor de edad&#39;);&#13;&#10;        break;&#13;&#10;    default:&#13;&#10;        console.log(&#39;No es mayor de edad ni menor de edad&#39;);&#13;&#10;        break;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:24:44', NULL),
(11, 'Operador Ternario', 'Operador Ternario en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//operador ternario&#13;&#10;$age = 18;&#13;&#10;$age &#38;gt;= 18 ? $message = &#39;Eres mayor de edad&#39; : $message = &#39;Eres menor de edad&#39;;&#13;&#10;echo $message;&#13;&#10;&#13;&#10;$result = $age &#38;gt;= 18 ? &#39;Eres mayor de edad&#39; : &#39;Eres menor de edad&#39;;&#13;&#10;echo $result;&#13;&#10;&#13;&#10;//operador ternario shorthand&#13;&#10;$number1 = 18;&#13;&#10;$number2 = 20;&#13;&#10;$result2 = $number1 &#38;gt; $number2;&#13;&#10;&#13;&#10;$color = $result2 ?: &#39;black&#39;; //si el primero es false, se devuelve el segundo, si es verdadero devuelve 1&#13;&#10;echo $color;&#13;&#10;&#13;&#10;//operador coalescencia NULL&#13;&#10;$number5 = 30;&#13;&#10;$number6 = 50;&#13;&#10;$result3 = $number5 ?? $number6; //si el primero es null, se usa el segundo&#13;&#10;echo $result3;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;// operador ternario&#13;&#10;let isTrue = true;&#13;&#10;let result = isTrue ? &#34;true&#34; : &#34;false&#34;;&#13;&#10;console.log(result); // imprime &#34;true&#34;&#13;&#10;&#13;&#10;let miEdad = 24;&#13;&#10;let mayorEdad = (miEdad &#38;gt; 18) ? &#34;Sí eres mayor de edad&#34; : &#34;No sigue intentando&#34;;&#13;&#10;console.log(mayorEdad); // imprime &#34;Sí eres mayor de edad&#34;&#13;&#10;&#13;&#10;&#13;&#10;// operador de coalescencia&#13;&#10;let number = null;&#13;&#10;let result1 = number ?? 0;&#13;&#10;console.log(result1); // imprime 0&#13;&#10;&#13;&#10;let isTrue2 = false;&#13;&#10;let result2 = isTrue2 ? &#34;true&#34; : &#34;false&#34; ?? &#34;default&#34;;&#13;&#10;console.log(result2); // imprime &#34;false&#34;&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:26:08', NULL),
(12, 'Loops While', 'Loops While en diversos lenguajes recorrer', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//while&#13;&#10;$i = 0;&#13;&#10;while ($i &#38;lt; 10) {&#13;&#10;    echo $i;&#13;&#10;    $i++;&#13;&#10;}&#13;&#10;&#13;&#10;echo &#39;&#39;;&#13;&#10;//do while primero ejecuta y luego comprueba&#13;&#10;$i = 0;&#13;&#10;do {&#13;&#10;    echo $i;&#13;&#10;    $i++;&#13;&#10;} while ($i &#38;lt; 10);&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//while&#13;&#10;//error con let i = 0;&#13;&#10;var i = 0;&#13;&#10;while (i &#38;lt; 10) {&#13;&#10;    console.log(i);&#13;&#10;    i++;&#13;&#10;}&#13;&#10;//do while primero ejecuta y luego comprueba&#13;&#10;var i = 0;&#13;&#10;do {&#13;&#10;    console.log(i);&#13;&#10;    i++;&#13;&#10;} while (i &#38;lt; 10);&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:27:18', NULL),
(13, 'Loops FOR', 'Loops FOR en diversos lenguajes recorrido', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//for&#13;&#10;for ($i = 0; $i &#38;lt; 10; $i++) {&#13;&#10;    echo $i . &#39;&#38;lt;br&#38;gt;&#39;;&#13;&#10;}&#13;&#10;&#13;&#10;//for each&#13;&#10;$colores = [&#39;rojo&#39;, &#39;azul&#39;, &#39;verde&#39;];&#13;&#10;&#13;&#10;//solo trae los valores&#13;&#10;foreach ($colores as $color) {&#13;&#10;    echo $color . &#39;&#38;lt;br&#38;gt;&#39;;&#13;&#10;}&#13;&#10;&#13;&#10;$cliente = [&#13;&#10;    &#39;nombre&#39; =&#38;gt; &#39;Juan&#39;,&#13;&#10;    &#39;apellido&#39; =&#38;gt; &#39;Perez&#39;,&#13;&#10;    &#39;edad&#39; =&#38;gt; &#39;30&#39;,&#13;&#10;    &#39;ocupacion&#39; =&#38;gt; &#39;Programador&#39;&#13;&#10;];&#13;&#10;&#13;&#10;//trae la clave y valor // propiedad =&#38;gt; valor&#13;&#10;foreach ($cliente as $clave =&#38;gt; $valor) {&#13;&#10;    echo $clave . &#39;: &#39; . $valor . &#39;&#38;lt;br&#38;gt;&#39;;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//for&#13;&#10;for (var i = 0; i &#38;lt; 10; i++) {&#13;&#10;    document.write(i + &#39;&#38;lt;br&#38;gt;&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;//for each&#13;&#10;var colores = [&#39;rojo&#39;, &#39;azul&#39;, &#39;verde&#39;];&#13;&#10;for (var i in colores) {&#13;&#10;    document.write(colores[i] + &#39;&#38;lt;br&#38;gt;&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;const cliente = {&#13;&#10;    nombre: &#39;Juan&#39;,&#13;&#10;    apellido: &#39;Perez&#39;,&#13;&#10;    edad: &#39;30&#39;,&#13;&#10;    ocupacion: &#39;Programador&#39;&#13;&#10;};&#13;&#10;for (var clave in cliente) {&#13;&#10;    document.write(clave + &#39;: &#39; + cliente[clave] + &#39;&#38;lt;br&#38;gt;&#39;);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:29:25', NULL),
(14, 'FUNCIÓN', 'funciones en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//function sum&#13;&#10;function sum($a, $b)&#13;&#10;{&#13;&#10;    return $a + $b;&#13;&#10;}&#13;&#10;&#13;&#10;echo sum(1, 2);&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//function sum&#13;&#10;function sum(a, b) {&#13;&#10;    return a + b;&#13;&#10;}&#13;&#10;console.log(sum(1, 2));&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 13:30:25', NULL),
(15, 'Clases Básico', 'clases basico de diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//definir una clase&#13;&#10;class Prueba&#13;&#10;{&#13;&#10;    //definir propiedades&#13;&#10;    public $nombre;&#13;&#10;    public $apellido;&#13;&#10;    public $edad;&#13;&#10;&#13;&#10;    //definir constructor&#13;&#10;    public function __construct($nombre, $apellido, $edad)&#13;&#10;    {&#13;&#10;        $this-&#38;gt;nombre = $nombre;&#13;&#10;        $this-&#38;gt;apellido = $apellido;&#13;&#10;        $this-&#38;gt;edad = $edad;&#13;&#10;    }&#13;&#10;&#13;&#10;    //definir metodo&#13;&#10;    public function mostrar_nombre_completo()&#13;&#10;    {&#13;&#10;        return $this-&#38;gt;nombre . &#34; &#34; . $this-&#38;gt;apellido;&#13;&#10;    }&#13;&#10;&#13;&#10;    //definir metodo&#13;&#10;    public function mostrar_edad()&#13;&#10;    {&#13;&#10;        return $this-&#38;gt;edad;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//instanciar un objeto&#13;&#10;$obj = new Prueba(&#34;Juan&#34;, &#34;Perez&#34;, 25);&#13;&#10;&#13;&#10;//llamar al metodo&#13;&#10;echo $obj-&#38;gt;mostrar_nombre_completo();&#13;&#10;echo &#34;&#34;;&#13;&#10;echo $obj-&#38;gt;mostrar_edad();&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//definir una clase&#13;&#10;class Prueba {&#13;&#10;    //definir propiedades&#13;&#10;    nombre;&#13;&#10;    apellido;&#13;&#10;    edad;&#13;&#10;&#13;&#10;    //definir constructor&#13;&#10;    constructor(nombre, apellido, edad) {&#13;&#10;        this.nombre = nombre;&#13;&#10;        this.apellido = apellido;&#13;&#10;        this.edad = edad;&#13;&#10;    }&#13;&#10;&#13;&#10;    //definir metodo&#13;&#10;    mostrar_nombre_completo() {&#13;&#10;        return this.nombre + &#34; &#34; + this.apellido;&#13;&#10;    }&#13;&#10;    //definir metodo&#13;&#10;    mostrar_edad() {&#13;&#10;        return this.edad;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//instanciar un objeto&#13;&#10;const obj = new Prueba(&#34;Juan&#34;, &#34;Perez&#34;, 25);&#13;&#10;//llamar al metodo&#13;&#10;console.log(obj.mostrar_nombre_completo());&#13;&#10;console.log(obj.mostrar_edad());&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:31:46', NULL),
(16, 'Clase estatica', 'Clase estatica en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//definir una clase&#13;&#10;class Prueba&#13;&#10;{&#13;&#10;    //definir propiedades estaticas&#13;&#10;    public static $nombre;&#13;&#10;    public static $apellido;&#13;&#10;    public static $edad;&#13;&#10;&#13;&#10;    //definir metodos estaticos&#13;&#10;    public static function setNombre($nombre)&#13;&#10;    {&#13;&#10;        self::$nombre = $nombre;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function setApellido($apellido)&#13;&#10;    {&#13;&#10;        self::$apellido = $apellido;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function setEdad($edad)&#13;&#10;    {&#13;&#10;        self::$edad = $edad;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function getNombre()&#13;&#10;    {&#13;&#10;        return self::$nombre;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function getApellido()&#13;&#10;    {&#13;&#10;        return self::$apellido;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function getEdad()&#13;&#10;    {&#13;&#10;        return self::$edad;&#13;&#10;    }&#13;&#10;&#13;&#10;    public static function mostrar()&#13;&#10;    {&#13;&#10;        echo &#34;Nombre: &#34; . self::getNombre() . &#34;&#34;;&#13;&#10;        echo &#34;Apellido: &#34; . self::getApellido() . &#34;&#34;;&#13;&#10;        echo &#34;Edad: &#34; . self::getEdad() . &#34;&#34;;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//asignar valores a las propiedades estaticas&#13;&#10;Prueba::setNombre(&#34;Juan&#34;);&#13;&#10;Prueba::setApellido(&#34;Perez&#34;);&#13;&#10;Prueba::setEdad(20);&#13;&#10;&#13;&#10;//mostrar valores de las propiedades estaticas&#13;&#10;Prueba::mostrar();&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//definir una clase&#13;&#10;class Prueba {&#13;&#10;    //definir propiedades estaticas&#13;&#10;    static nombre;&#13;&#10;    static apellido;&#13;&#10;    static edad;&#13;&#10;&#13;&#10;    //definir metodos estaticos&#13;&#10;    static setNombre(nombre) {&#13;&#10;        this.nombre = nombre;&#13;&#10;    }&#13;&#10;    static setApellido(apellido) {&#13;&#10;        this.apellido = apellido;&#13;&#10;    }&#13;&#10;    static setEdad(edad) {&#13;&#10;        this.edad = edad;&#13;&#10;    }&#13;&#10;    static getNombre() {&#13;&#10;        return this.nombre;&#13;&#10;    }&#13;&#10;    static getApellido() {&#13;&#10;        return this.apellido;&#13;&#10;    }&#13;&#10;    static getEdad() {&#13;&#10;        return this.edad;&#13;&#10;    }&#13;&#10;    static mostrar() {&#13;&#10;        console.log(&#34;Nombre: &#34; + this.getNombre());&#13;&#10;        console.log(&#34;Apellido: &#34; + this.getApellido());&#13;&#10;        console.log(&#34;Edad: &#34; + this.getEdad());&#13;&#10;    }&#13;&#10;}&#13;&#10;//asignar valores a las propiedades estaticas&#13;&#10;Prueba.setNombre(&#34;Juan&#34;);&#13;&#10;Prueba.setApellido(&#34;Perez&#34;);&#13;&#10;Prueba.setEdad(20);&#13;&#10;//mostrar valores de las propiedades estaticas&#13;&#10;Prueba.mostrar();&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:33:08', NULL),
(17, 'clases privadas', 'clases privadas en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//propiedades y metodo privadas - agregar &#39;private&#39; al inicio&#13;&#10;class User&#13;&#10;{&#13;&#10;    //propiedades privados&#13;&#10;    private $name;&#13;&#10;    private $email;&#13;&#10;&#13;&#10;    //metodos&#13;&#10;    public function __construct($name, $email)&#13;&#10;    {&#13;&#10;        $this-&#38;gt;name = $name;&#13;&#10;        $this-&#38;gt;email = $email;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodo publico&#13;&#10;    public function getName()&#13;&#10;    {&#13;&#10;        return $this-&#38;gt;name;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodos privados&#13;&#10;    private function getEmail()&#13;&#10;    {&#13;&#10;        return $this-&#38;gt;email;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//instancia de la clase&#13;&#10;$user = new User(&#39;Roberto&#39;, &#39;a@a.com&#39;);&#13;&#10;echo $user-&#38;gt;name; //error no se puede acceder a propiedades privadas&#13;&#10;echo $user-&#38;gt;getName();&#13;&#10;echo $user-&#38;gt;getEmail(); //error no se puede acceder a un metodo privado&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//propiedades y metodo privadas - agregar &#39;#&#39; al inicio&#13;&#10;class User {&#13;&#10;    //propiedades privados&#13;&#10;    #name;&#13;&#10;    #email;&#13;&#10;&#13;&#10;    constructor(name, email) {&#13;&#10;        this.#name = name;&#13;&#10;        this.#email = email;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodo publico&#13;&#10;    getName() {&#13;&#10;        return this.#name;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodos privados&#13;&#10;    #getEmail() {&#13;&#10;        return this.#email;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodos privados (otro formato)&#13;&#10;    #get_Email = () =&#38;gt; {&#13;&#10;        return this.#email;&#13;&#10;    }&#13;&#10;&#13;&#10;    //metodo publico invocando metodo privado&#13;&#10;    getInfo() {&#13;&#10;        return `${this.#name} - ${this.#getEmail()}`;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//instancia de la clase&#13;&#10;let user = new User(&#39;Roberto&#39;, &#39;a@a.com&#39;);&#13;&#10;console.log(user.#name); //error no se puede acceder a propiedades privadas&#13;&#10;console.log(user.getName());&#13;&#10;console.log(user.#getEmail()); //error no se puede acceder a un metodo privado&#13;&#10;console.log(user.getInfo());&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:34:27', NULL),
(18, 'clases herencia', 'clases herencia en diversos lenguajes', '&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//definir una clase&#13;&#10;class Transporte&#13;&#10;{&#13;&#10;    public function __construct(protected int $ruedas, protected int $capacidad)&#13;&#10;    {&#13;&#10;    }&#13;&#10;&#13;&#10;    public function getInfo(): string&#13;&#10;    {&#13;&#10;        return &#34;el transporte tiene: Ruedas: {$this-&#38;gt;ruedas} - Capacidad: {$this-&#38;gt;capacidad}&#34;;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//heredar la clase&#13;&#10;class Bicicleta extends Transporte&#13;&#10;{&#13;&#10;}&#13;&#10;&#13;&#10;class Coche extends Transporte&#13;&#10;{&#13;&#10;    public function __construct(protected int $ruedas, protected int $capacidad, protected string $transmision)&#13;&#10;    {&#13;&#10;    }&#13;&#10;&#13;&#10;    public function getTransmision(): string&#13;&#10;    {&#13;&#10;        return $this-&#38;gt;transmision;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//instanciar un objeto de la clase&#13;&#10;$bici = new Bicicleta(2, 1);&#13;&#10;$coche = new Coche(4, 2, &#34;Manual&#34;);&#13;&#10;&#13;&#10;echo $bici-&#38;gt;getInfo();&#13;&#10;echo &#34;&#38;lt;br&#38;gt;&#34;;&#13;&#10;echo $coche-&#38;gt;getInfo();&#13;&#10;echo &#34;&#38;lt;br&#38;gt;&#34;;&#13;&#10;echo $coche-&#38;gt;getTransmision();&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//definir una clase&#13;&#10;class Transporte {&#13;&#10;    constructor(ruedas, capacidad) {&#13;&#10;        this.ruedas = ruedas;&#13;&#10;        this.capacidad = capacidad;&#13;&#10;    }&#13;&#10;&#13;&#10;    getInfo() {&#13;&#10;        return &#34;el transporte tiene: Ruedas: &#34; + this.ruedas + &#34; - Capacidad: &#34; + this.capacidad;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//heredar la clase&#13;&#10;class Bicicleta extends Transporte {}&#13;&#10;&#13;&#10;class Coche extends Transporte {&#13;&#10;    constructor(ruedas, capacidad, transmision) {&#13;&#10;        super(ruedas, capacidad);&#13;&#10;        this.transmision = transmision;&#13;&#10;    }&#13;&#10;    getTransmision() {&#13;&#10;        return this.transmision;&#13;&#10;    }&#13;&#10;}&#13;&#10;//instanciar un objeto de la clase&#13;&#10;const bici = new Bicicleta(2, 1);&#13;&#10;const coche = new Coche(4, 2, &#34;Manual&#34;);&#13;&#10;console.log(bici.getInfo());&#13;&#10;console.log(coche.getInfo());&#13;&#10;console.log(coche.getTransmision());&#60;/code&#62;&#60;/pre&#62;', 4, '2022-11-07 13:35:40', NULL),
(19, 'Tipado PHP', 'Tipado PHP formas de tipo devariables y funciones', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//TIPADO EN PHP&#13;&#10;declare(strict_types=1);&#13;&#10;&#13;&#10;//funcion que retorna entero&#13;&#10;function sum2(int $a, int $b): int&#13;&#10;{&#13;&#10;    return $a + $b;&#13;&#10;}&#13;&#10;&#13;&#10;echo sum2(8, 9);&#13;&#10;&#13;&#10;//funcion que retorna string o null&#13;&#10;function userAuth(bool $auth): string|null&#13;&#10;{&#13;&#10;    if ($auth) {&#13;&#10;        return &#39;User is authenticated&#39;;&#13;&#10;    }&#13;&#10;    return null;&#13;&#10;}&#13;&#10;&#13;&#10;echo userAuth(true);&#13;&#10;&#13;&#10;//DATOS&#13;&#10;//https://desarrollowp.com/blog/tutoriales/declara-strict-types-en-tus-ficheros-php&#13;&#10;//https://www.php.net/manual/es/functions.arguments.php#functions.arguments.type-declaration.types&#13;&#10;//https://www.php.net/manual/es/language.types.declarations.php&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:06:41', NULL),
(20, 'json_encode y json_decode', 'json codificado y decodificado', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//array asociativo&#13;&#10;$product = [&#13;&#10;    [&#13;&#10;        &#39;name&#39; =&#38;gt; &#39;tablet&#39;,&#13;&#10;        &#39;price&#39; =&#38;gt; &#39;$200&#39;,&#13;&#10;        &#39;description&#39; =&#38;gt; &#39;tablet de google&#39;&#13;&#10;    ],&#13;&#10;    [&#13;&#10;        &#39;name&#39; =&#38;gt; &#39;smartphone&#39;,&#13;&#10;        &#39;price&#39; =&#38;gt; &#39;$100&#39;,&#13;&#10;        &#39;descriptión&#39; =&#38;gt; &#39;smartphone de google&#39;&#13;&#10;    ],&#13;&#10;    [&#13;&#10;        &#39;name&#39; =&#38;gt; &#39;laptop&#39;,&#13;&#10;        &#39;price&#39; =&#38;gt; &#39;$300&#39;,&#13;&#10;        &#39;description&#39; =&#38;gt; &#39;laptop de google&#39;&#13;&#10;    ]&#13;&#10;];&#13;&#10;&#13;&#10;echo &#39;&#38;lt;pre&#38;gt;&#39;;&#13;&#10;//ver el array php&#13;&#10;var_dump($product);&#13;&#10;&#13;&#10;//convert json &#13;&#10;//JSON_UNESCAPED_UNICODE respetando los acentos y caracteres especiales&#13;&#10;//convertir un array a json&#13;&#10;$json = json_encode($product, JSON_UNESCAPED_UNICODE);&#13;&#10;echo $json;&#13;&#10;&#13;&#10;// json a array php&#13;&#10;$array = json_decode($json, true);&#13;&#10;var_dump($array);&#13;&#10;&#13;&#10;echo &#39;&#38;lt;/pre&#38;gt;&#39;;&#13;&#10;&#13;&#10;$objeto = new Objeto(&#39;tablet&#39;, &#39;$200&#39;, &#39;tablet de google&#39;);&#13;&#10;$json = json_encode($objeto, JSON_UNESCAPED_UNICODE);&#13;&#10;echo $json;&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:09:37', NULL),
(21, 'CONEXION A BD Mysqli', 'coneccion a la base de datos en forma Mysqli', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//conectar a la base de datos Mysqli&#13;&#10;$db = new mysqli(&#39;localhost&#39;, &#39;root&#39;, &#39;root&#39;, &#39;uptask&#39;);&#13;&#10;if ($db-&#38;gt;connect_errno &#38;gt; 0) {&#13;&#10;    die(&#39;No se puede conectar a la base de datos [&#39; . $db-&#38;gt;connect_error . &#39;]&#39;);&#13;&#10;}&#13;&#10;//consulta a la base de datos&#13;&#10;$sql = &#34;SELECT * FROM users&#34;;&#13;&#10;if (!$result = $db-&#38;gt;query($sql)) {&#13;&#10;    die(&#39;Ocurrio un error ejecutando la consulta [&#39; . $db-&#38;gt;error . &#39;]&#39;);&#13;&#10;}&#13;&#10;//imprimir los resultados&#13;&#10;$array = array();&#13;&#10;while ($row = $result-&#38;gt;fetch_assoc()) {&#13;&#10;    $array[] = $row;&#13;&#10;}&#13;&#10;&#13;&#10;echo &#39;&#38;lt;pre&#38;gt;&#39;;&#13;&#10;var_dump($array);&#13;&#10;echo &#39;&#38;lt;/pre&#38;gt;&#39;;&#13;&#10;//liberar el resultado&#13;&#10;$result-&#38;gt;free();&#13;&#10;//cerrar la conexion&#13;&#10;$db-&#38;gt;close();&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:11:40', NULL),
(22, 'CONEXION A BD PDO', 'coneccion a la base de datos en forma PDO', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//conectar a la base de datos PDO&#13;&#10;$db = new PDO(&#39;mysql:host=localhost;dbname=uptask&#39;, &#39;root&#39;, &#39;root&#39;);&#13;&#10;//preparar la consulta&#13;&#10;$query = &#39;SELECT * FROM users&#39;;&#13;&#10;//ejecutar la consulta&#13;&#10;$users = $db-&#38;gt;query($query)&#13;&#10;    -&#38;gt;fetchAll(PDO::FETCH_ASSOC);&#13;&#10;// -&#38;gt;fetchAll(PDO::FETCH_OBJ);&#13;&#10;&#13;&#10;// var_dump($users);&#13;&#10;echo json_encode($users);&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:12:16', NULL),
(23, 'CONEXION A BD PREPARE Mysqli', 'coneccion a la base de datos en forma Mysqli de consultas de forma segura', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//conectar a la base de datos Mysqli&#13;&#10;$db = new mysqli(&#39;localhost&#39;, &#39;root&#39;, &#39;root&#39;, &#39;uptask&#39;);&#13;&#10;if ($db-&#38;gt;connect_errno &#38;gt; 0) {&#13;&#10;    die(&#39;No se puede conectar a la base de datos [&#39; . $db-&#38;gt;connect_error . &#39;]&#39;);&#13;&#10;}&#13;&#10;//query para obtener los datos de la tabla usuarios&#13;&#10;$sql = &#34;SELECT * FROM users&#34;;&#13;&#10;//sentencia preparada para evitar inyecciones sql&#13;&#10;$stmt = $db-&#38;gt;prepare($sql);&#13;&#10;//ejecutar la sentencia&#13;&#10;$stmt-&#38;gt;execute();&#13;&#10;//obtener los datos de la tabla&#13;&#10;$stmt-&#38;gt;bind_result($id, $nombre, $email, $password, $token, $estado, $created_at, $updated_at);&#13;&#10;//crear un array para almacenar los datos de la tabla&#13;&#10;$users = array();&#13;&#10;//recorrer los datos de la tabla&#13;&#10;while ($stmt-&#38;gt;fetch()) {&#13;&#10;    $users[] = array(&#13;&#10;        &#39;id&#39; =&#38;gt; $id,&#13;&#10;        &#39;name&#39; =&#38;gt; $nombre,&#13;&#10;        &#39;email&#39; =&#38;gt; $email,&#13;&#10;        &#39;password&#39; =&#38;gt; $password,&#13;&#10;        &#39;token&#39; =&#38;gt; $token,&#13;&#10;        &#39;estado&#39; =&#38;gt; $estado,&#13;&#10;        &#39;created_at&#39; =&#38;gt; $created_at,&#13;&#10;        &#39;updated_at&#39; =&#38;gt; $updated_at&#13;&#10;    );&#13;&#10;}&#13;&#10;//cerrar la conexion con la base de datos&#13;&#10;$db-&#38;gt;close();&#13;&#10;//devolver los datos de la tabla&#13;&#10;echo json_encode($users);&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:13:44', NULL),
(24, 'CONEXION A BD PREPARE pdo', 'coneccion a la base de datos en forma pdo de consultas de forma segura', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//conectar a la base de datos PDO&#13;&#10;$db = new PDO(&#39;mysql:host=localhost;dbname=uptask&#39;, &#39;root&#39;, &#39;root&#39;);&#13;&#10;//preparar la consulta&#13;&#10;$query = &#39;SELECT * FROM users&#39;;&#13;&#10;//sentencia preparada para evitar inyecciones sql&#13;&#10;$stmt = $db-&#38;gt;prepare($query);&#13;&#10;//ejecutar la consulta&#13;&#10;$stmt-&#38;gt;execute();&#13;&#10;//obtener los datos de la consulta&#13;&#10;$users = $stmt-&#38;gt;fetchAll(PDO::FETCH_ASSOC);&#13;&#10;//mostrar los datos&#13;&#10;echo json_encode($users);&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:14:24', NULL),
(25, 'TRY CATCH', 'ver capturar los errores de codigo', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//primera forma&#13;&#10;function dividir($numero1, $numero2)&#13;&#10;{&#13;&#10;    try {&#13;&#10;        if ($numero2 == 0) {&#13;&#10;            //si el segundo numero es 0, lanzar una excepcion&#13;&#10;            throw new Exception(&#39;No se puede dividir por 0&#39;);&#13;&#10;        }&#13;&#10;        return $numero1 / $numero2;&#13;&#10;    } catch (Exception $e) {&#13;&#10;        //si se produce una excepcion, mostrar el mensaje de la excepcion&#13;&#10;        echo &#39;Error: &#39; . $e-&#38;gt;getMessage();&#13;&#10;        exit;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;$resultado = dividir(10, 0);&#13;&#10;echo $resultado;&#13;&#10;&#13;&#10;&#13;&#10;//segunda forma&#13;&#10;function dividir($numero1, $numero2)&#13;&#10;{&#13;&#10;    if ($numero2 == 0) {&#13;&#10;        //si el segundo numero es 0, lanzar una excepcion&#13;&#10;        throw new Exception(&#39;No se puede dividir por 0&#39;);&#13;&#10;    }&#13;&#10;    return $numero1 / $numero2;&#13;&#10;}&#13;&#10;&#13;&#10;try {&#13;&#10;    $resultadoa = dividir(10, 2);&#13;&#10;    echo $resultadoa;&#13;&#10;    $resultado = dividir(10, 0); //genera una excepcion&#13;&#10;    echo $resultado;&#13;&#10;} catch (Exception $e) {&#13;&#10;    //si se produce una excepcion, mostrar el mensaje de la excepcion&#13;&#10;    echo &#39;Error: &#39; . $e-&#38;gt;getMessage();&#13;&#10;    exit;&#13;&#10;} finally {&#13;&#10;    //se ejecuta siempre&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:16:55', NULL),
(26, 'error personalizado', 'capturar error personalizado', '&#60;p&#62;FORMA 1&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//Exception personalizada&#13;&#10;&#13;&#10;function myErrorHandler($errorCode, $msg, $errfile, $errline)&#13;&#10;{&#13;&#10;    echo &#34;Error capturado: [$errorCode] mensaje: $msg&#34;;&#13;&#10;    echo &#34;Error en linea $errline del archivo: $errfile&#34;;&#13;&#10;    die();&#13;&#10;}&#13;&#10;&#13;&#10;// Establecer la función de manejo de errores definida por el usuario&#13;&#10;set_error_handler(&#34;myErrorHandler&#34;);&#13;&#10;&#13;&#10;$test = 2;&#13;&#10;&#13;&#10;// Trigger error&#13;&#10;if ($test &#38;gt; 1) {&#13;&#10;    trigger_error(&#34;$test es mayor que 1&#34;);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;FORMA 2&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//Exception personalizada&#13;&#10;&#13;&#10;function myErrorHandler($errorCode, $msg, $errfile, $errline)&#13;&#10;{&#13;&#10;    echo &#34;Error capturado: [$errorCode] mensaje: $msg&#34;;&#13;&#10;    echo &#34;Error en linea $errline del archivo: $errfile&#34;;&#13;&#10;    die();&#13;&#10;}&#13;&#10;&#13;&#10;// Establecer la función de manejo de errores definida por el usuario&#13;&#10;set_error_handler(&#34;myErrorHandler&#34;);&#13;&#10;&#13;&#10;function divide($a, $b)&#13;&#10;{&#13;&#10;    if ($b == 0) {&#13;&#10;        //trigger_error&#13;&#10;        trigger_error(&#34;No se puede dividir por cero&#34;, E_USER_WARNING);&#13;&#10;    }&#13;&#10;    return $a / $b;&#13;&#10;}&#13;&#10;&#13;&#10;echo divide(10, 0);&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;FORMA 3&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;class customException extends Exception&#13;&#10;{&#13;&#10;    public function errorMessage()&#13;&#10;    {&#13;&#10;        //error message&#13;&#10;        $errorMsg = &#39;Error en la linea &#39; . $this-&#38;gt;getLine() . &#39; en el archivo: &#39; . $this-&#38;gt;getFile()&#13;&#10;            . &#39;: &#39; . $this-&#38;gt;getMessage() . &#39;&#39;;&#13;&#10;        return $errorMsg;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;$email = &#34;someone@example...com&#34;;&#13;&#10;&#13;&#10;try {&#13;&#10;    //check if&#13;&#10;    if (filter_var($email, FILTER_VALIDATE_EMAIL) === FALSE) {&#13;&#10;        //throw exception if email is not valid&#13;&#10;        throw new customException(&#34;$email no es un email valido&#34;);&#13;&#10;    }&#13;&#10;} catch (customException $e) {&#13;&#10;    //display custom message&#13;&#10;    echo $e-&#38;gt;errorMessage();&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;FORMA 4&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;class customException extends Exception&#13;&#10;{&#13;&#10;    public function errorMessage()&#13;&#10;    {&#13;&#10;        //error message&#13;&#10;        $errorMsg = &#39;Error on line &#39; . $this-&#38;gt;getLine() . &#39; in &#39; . $this-&#38;gt;getFile()&#13;&#10;            . &#39;: &#39; . $this-&#38;gt;getMessage() . &#39; is not a valid E-Mail address&#39;;&#13;&#10;        return $errorMsg;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;$email = &#34;someone@example.com&#34;;&#13;&#10;&#13;&#10;try {&#13;&#10;    //check if&#13;&#10;    if (filter_var($email, FILTER_VALIDATE_EMAIL) === FALSE) {&#13;&#10;        //throw exception if email is not valid&#13;&#10;        throw new customException($email);&#13;&#10;    }&#13;&#10;    //check for &#34;example&#34; in mail address&#13;&#10;    if (strpos($email, &#34;example&#34;) !== FALSE) {&#13;&#10;        throw new Exception(&#34;$email is an example e-mail&#34;);&#13;&#10;    }&#13;&#10;} catch (customException $e) {&#13;&#10;    echo $e-&#38;gt;errorMessage();&#13;&#10;} catch (Exception $e) {&#13;&#10;    echo $e-&#38;gt;getMessage();&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:19:41', NULL),
(27, 'Throwable ERROR', 'Throwable capturar error tipos de errores', '&#60;p&#62;forma 1&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//Si deseas capturar todas las excepciones y errores, puedes usar Throwable como el tipo de captura&#13;&#10;try {&#13;&#10;    function add(int $a, int $b): int&#13;&#10;    {&#13;&#10;        return $a + $b;&#13;&#10;    }&#13;&#10;    //la siguiente linea lanza una excepcion&#13;&#10;    echo add(array(), array());&#13;&#10;} catch (Throwable $t) {&#13;&#10;    //no necesitamos crear un throw new Exception(&#34;&#34;);&#13;&#10;    //pero el msg que enviar esta en ingles&#13;&#10;    echo &#34;Error: &#34; . $t-&#38;gt;getMessage();&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 2&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;try {&#13;&#10;    function add(int $a, int $b): int&#13;&#10;    {&#13;&#10;        return $a + $b;&#13;&#10;    }&#13;&#10;    //la siguiente linea lanza una excepcion&#13;&#10;    echo add(array(), array());&#13;&#10;} catch (Error  $t) {&#13;&#10;    //no necesitamos crear un throw new Exception(&#34;&#34;);&#13;&#10;    //pero el msg que enviar esta en ingles&#13;&#10;    echo &#34;Error: &#34; . $t-&#38;gt;getMessage();&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 3&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;try {&#13;&#10;    function add(int $a, int $b): int&#13;&#10;    {&#13;&#10;        return $a + $b;&#13;&#10;    }&#13;&#10;    //la siguiente linea lanza una excepcion&#13;&#10;    echo add(array(), array());&#13;&#10;} catch (TypeError  $t) {&#13;&#10;    //no necesitamos crear un throw new Exception(&#34;&#34;);&#13;&#10;    //pero el msg que enviar esta en ingles&#13;&#10;    echo &#34;Error: &#34; . $t-&#38;gt;getMessage();&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 1, '2022-11-07 14:30:12', NULL),
(28, 'metodos string', 'metodos string en javascript', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//crear string&#13;&#10;let str = &#34;Hello World&#34;;&#13;&#10;console.log(str);&#13;&#10;let str2 = String(&#39;carlos tucno&#39;);&#13;&#10;console.log(str2);&#13;&#10;let str3 = new String(&#39;carlos tucno&#39;);&#13;&#10;console.log(str3);&#13;&#10;&#13;&#10;//contar string&#13;&#10;let producto = &#34;  Monitor 20 pulgadas   &#34;;&#13;&#10;console.log(producto.length);&#13;&#10;&#13;&#10;//indexOf string -- indexOf busca el indice del primer caracter en un string&#13;&#10;console.log(producto.indexOf(&#39;p&#39;));&#13;&#10;console.log(producto.indexOf(&#39;pulgadas&#39;));&#13;&#10;&#13;&#10;//incclude string -- include busca si un string esta contenido en otro string&#13;&#10;console.log(producto.includes(&#39;pulgadas&#39;)); // true&#13;&#10;&#13;&#10;//concatenar string&#13;&#10;let precio = &#39;30 soles&#39;&#13;&#10;console.log(producto.concat(precio));&#13;&#10;&#13;&#10;//eliminar espaços al inicio de un string&#13;&#10;console.log(producto.trimStart());&#13;&#10;&#13;&#10;//eliminar espaços al final de un string&#13;&#10;console.log(producto.trimEnd());&#13;&#10;&#13;&#10;//eliminar espaços al inicio y al final de un string&#13;&#10;console.log(producto.trim());&#13;&#10;&#13;&#10;//reemplazar un string por otro&#13;&#10;console.log(producto.replace(&#39;Monitor&#39;, &#39;Teclado&#39;));&#13;&#10;&#13;&#10;//cortar un string .slice(inicio, fin)&#13;&#10;console.log(producto.slice(0, 5));&#13;&#10;&#13;&#10;//cortar un string .substring(inicio, fin)&#13;&#10;//cortar un string .substring(fin, inicio) // si es mayor primero&#13;&#10;console.log(producto.substring(0, 10));&#13;&#10;&#13;&#10;//charAt - devuelve el caracter en la posicion indicada&#13;&#10;console.log(producto.charAt(0));&#13;&#10;&#13;&#10;//charCodeAt - devuelve el codigo ascii del caracter en la posicion indicada&#13;&#10;console.log(producto.charCodeAt(0));&#13;&#10;&#13;&#10;//.repetear un string&#13;&#10;console.log(producto.repeat(2));&#13;&#10;&#13;&#10;//split - separa un string en un array&#13;&#10;console.log(producto.split(&#39; &#39;));&#13;&#10;&#13;&#10;let producto2 = &#34;Monitor 20 pulgadas #precio de regalo&#34;;&#13;&#10;console.log(producto2.split(&#39;#&#39;));&#13;&#10;&#13;&#10;//string a mayusculas&#13;&#10;console.log(producto2.toUpperCase());&#13;&#10;&#13;&#10;//string a minusculas&#13;&#10;console.log(producto2.toLowerCase());&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:32:02', NULL),
(29, 'concatenar string', 'unir dos cadenas de texto mediante tilde invertida', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//concatenar string&#13;&#10;let producto = &#34;  Monitor 20 pulgadas   &#34;;&#13;&#10;let precio = &#39;30 soles&#39;&#13;&#10;&#13;&#10;console.log(producto.concat(precio));&#13;&#10;&#13;&#10;//concatenar string + separador&#13;&#10;console.log(producto + &#39; tiene un precio &#39; + precio);&#13;&#10;&#13;&#10;//concatenar string , separador&#13;&#10;console.log(producto, &#39; tiene un precio &#39;, precio);&#13;&#10;&#13;&#10;//template string - obligatorio tildes invertidas alt+96&#13;&#10;console.log(`${producto} tiene un precio ${precio}`);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:33:28', NULL),
(30, 'string a number', 'texto a numero', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//string a numero&#13;&#10;let precio3 = &#34;50&#34;;&#13;&#10;console.log(parseInt(precio3));&#13;&#10;console.log(Number.parseInt(precio3));&#13;&#10;console.log(Number(precio3));&#13;&#10;console.log(parseFloat(precio3));&#13;&#10;let precio4 = &#34;50.8&#34;;&#13;&#10;console.log(parseInt(precio4)); //redondea hacia abajo&#13;&#10;console.log(parseFloat(precio4));&#13;&#10;&#13;&#10;//revisar si es un numero entero&#13;&#10;let precio5 = 25;&#13;&#10;console.log(Number.isInteger(precio3)); //false&#13;&#10;console.log(Number.isInteger(precio5)); //true&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:34:05', NULL),
(31, 'operador ternario', 'operador ternario condicional simple', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;// operador ternario&#13;&#10;let isTrue = true;&#13;&#10;let result = isTrue ? &#34;true&#34; : &#34;false&#34;;&#13;&#10;console.log(result); // imprime &#34;true&#34;&#13;&#10;&#13;&#10;let miEdad = 24;&#13;&#10;let mayorEdad = (miEdad &#38;gt; 18) ? &#34;Sí eres mayor de edad&#34; : &#34;No sigue intentando&#34;;&#13;&#10;console.log(mayorEdad); // imprime &#34;Sí eres mayor de edad&#34;&#13;&#10;&#13;&#10;let a = 11;&#13;&#10;let numeroObtenido = a == 5 ? &#34;Cinco&#34; : a == 7 ? &#34;Siete&#34; : a == 11 ? &#34;Once&#34; : a == 15 ? &#34;Quince&#34; : &#34;Otro Número&#34;;&#13;&#10;console.log(numeroObtenido); // imprime &#34;Once&#34;&#13;&#10;&#13;&#10;// operador de coalescencia&#13;&#10;let isTrue2 = 20;&#13;&#10;let result2 = isTrue2 ? &#34;true&#34; : &#34;false&#34; ?? &#34;default&#34;;&#13;&#10;console.log(result2); // imprime &#34;true&#34;&#13;&#10;&#13;&#10;let isTrue3 = 20;&#13;&#10;let result3 = isTrue3 ? &#34;true&#34; : &#34;false&#34; ?? &#34;default&#34;;&#13;&#10;console.log(result3); // imprime &#34;default&#34;&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:35:07', NULL),
(32, 'objeto math', 'objeto matematico y metodos', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto math&#13;&#10;//PI&#13;&#10;let resultado = Math.PI;&#13;&#10;&#13;&#10;//redondear&#13;&#10;resultado = Math.round(2.5); //3&#13;&#10;resultado = Math.round(2.6); //3&#13;&#10;resultado = Math.round(2.4); //2&#13;&#10;&#13;&#10;//redondear hacia abajo&#13;&#10;resultado = Math.floor(2.5); //2&#13;&#10;resultado = Math.floor(2.6); //2&#13;&#10;&#13;&#10;//redondear hacia arriba&#13;&#10;resultado = Math.ceil(2.5); //3&#13;&#10;resultado = Math.ceil(2.6); //3&#13;&#10;resultado = Math.ceil(2.4); //3&#13;&#10;&#13;&#10;//raiz cuadradado&#13;&#10;resultado = Math.sqrt(9); //3&#13;&#10;&#13;&#10;//potencia&#13;&#10;resultado = Math.pow(2, 3); //8&#13;&#10;&#13;&#10;//absoluto&#13;&#10;resultado = Math.abs(-2); //2&#13;&#10;&#13;&#10;//minimo&#13;&#10;resultado = Math.min(2, 3, 1, -2); //-2&#13;&#10;&#13;&#10;//maximo&#13;&#10;resultado = Math.max(2, 3, 1, -2); //3&#13;&#10;&#13;&#10;//aleatorio&#13;&#10;resultado = Math.random(); //0.965...&#13;&#10;console.log(resultado)&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:36:08', NULL);
INSERT INTO `codigos` (`id`, `titulo`, `descripcion`, `codigo`, `lenguaje_id`, `created_at`, `updated_at`) VALUES
(33, 'objeto literal', 'objeto simple mediante llaves destructuring ', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto literal&#13;&#10;const producto = {&#13;&#10;    nombre: &#34;Monitor&#34;,&#13;&#10;    precio: 300,&#13;&#10;    descripcion: &#34;Monitor de 19 pulgadas&#34;,&#13;&#10;    disponible: true,&#13;&#10;    stock: 10,&#13;&#10;    marca: &#34;Samsung&#34;,&#13;&#10;    talla: &#34;19&#34;,&#13;&#10;}&#13;&#10;&#13;&#10;//ver objeto&#13;&#10;console.log(producto);&#13;&#10;//acceder a elemento de objeto mediante su nombre o su indice (clave) (propiedad)&#13;&#10;console.log(producto.nombre);&#13;&#10;console.log(producto[&#34;nombre&#34;]);&#13;&#10;&#13;&#10;//agregar propiedades&#13;&#10;producto.color = &#34;rojo&#34;;&#13;&#10;console.log(producto);&#13;&#10;&#13;&#10;//eliminar propiedades&#13;&#10;delete producto.marca;&#13;&#10;console.log(producto);&#13;&#10;&#13;&#10;//destructuring elementos de objeto&#13;&#10;const {&#13;&#10;    nombre,&#13;&#10;    precio,&#13;&#10;    descripcion,&#13;&#10;    disponible,&#13;&#10;    stock,&#13;&#10;    marca,&#13;&#10;    talla&#13;&#10;} = producto;&#13;&#10;console.log(nombre);&#13;&#10;&#13;&#10;//destructuring elementos de objeto con alias&#13;&#10;const {&#13;&#10;    nombre: nn,&#13;&#10;    precio: pp,&#13;&#10;    descripcion: dd,&#13;&#10;    disponible: dia,&#13;&#10;    stock: ss,&#13;&#10;    marca: mm,&#13;&#10;    talla: tt&#13;&#10;} = producto;&#13;&#10;console.log(nn);&#13;&#10;&#13;&#10;//destructuring elementos de objeto con alias y default&#13;&#10;const {&#13;&#10;    nombre: n,&#13;&#10;    precio: p = 0,&#13;&#10;    descripcion: d = &#34;&#34;,&#13;&#10;    disponible: di = true,&#13;&#10;    stock: s = 0,&#13;&#10;    marca: m = &#34;&#34;,&#13;&#10;    talla: t = &#34;&#34;&#13;&#10;} = producto;&#13;&#10;console.log(n);&#13;&#10;&#13;&#10;&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:37:39', NULL),
(34, 'objeto en objeto', 'objeto dentro de otro objeto spread operator', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto dentro de un objeto&#13;&#10;const persona = {&#13;&#10;    name: &#34;Juan&#34;,&#13;&#10;    edad: 30,&#13;&#10;    direccion: {&#13;&#10;        calle: &#34;Calle falsa&#34;,&#13;&#10;        numero: 123,&#13;&#10;        ciudad: &#34;Ciudad falsa&#34;,&#13;&#10;        pais: &#34;Pais falsa&#34;,&#13;&#10;    }&#13;&#10;}&#13;&#10;console.log(persona);&#13;&#10;console.log(persona.name);&#13;&#10;console.log(persona.direccion.calle);&#13;&#10;&#13;&#10;//destructuring elementos de objeto dentro de un objeto&#13;&#10;const {&#13;&#10;    name,&#13;&#10;    edad,&#13;&#10;    direccion: {&#13;&#10;        calle,&#13;&#10;        numero,&#13;&#10;        ciudad,&#13;&#10;        pais&#13;&#10;    }&#13;&#10;} = persona;&#13;&#10;console.log(name);&#13;&#10;console.log(calle);&#13;&#10;&#13;&#10;//congelar objeto&#13;&#10;const persona2 = Object.freeze(persona);&#13;&#10;persona2.name = &#34;Pedro&#34;;&#13;&#10;console.log(persona2);&#13;&#10;&#13;&#10;//sellar objeto&#13;&#10;const persona3 = Object.seal(persona);&#13;&#10;persona3.name = &#34;Pedro&#34;;&#13;&#10;console.log(persona3);&#13;&#10;&#13;&#10;//unir dos objetos&#13;&#10;const productos = {&#13;&#10;    nombre: &#34;Monitor&#34;,&#13;&#10;    precio: 300,&#13;&#10;    descripcion: &#34;Monitor de 19 pulgadas&#34;,&#13;&#10;    disponible: true,&#13;&#10;}&#13;&#10;&#13;&#10;const medidas = {&#13;&#10;    stock: 10,&#13;&#10;    talla: &#34;19&#34;,&#13;&#10;}&#13;&#10;&#13;&#10;const unionObj = Object.assign(productos, medidas);&#13;&#10;console.log(unionObj);&#13;&#10;&#13;&#10;//spread operator o rest operator&#13;&#10;const unionObj2 = {&#13;&#10;    ...productos,&#13;&#10;    ...medidas&#13;&#10;}&#13;&#10;console.log(unionObj2);&#13;&#10;&#13;&#10;//objeto con metodos&#13;&#10;const producto = {&#13;&#10;    nombre: &#34;Camiseta&#34;,&#13;&#10;    precio: 20,&#13;&#10;    cant: 10,&#13;&#10;    calcularImpuesto: function() {&#13;&#10;        return this.precio * 1.16;&#13;&#10;    },&#13;&#10;&#13;&#10;    set nombreNuevo(nombre) {&#13;&#10;        this.nombre = nombre;&#13;&#10;    },&#13;&#10;    get nombreTraer() {&#13;&#10;        return this.nombre;&#13;&#10;    },&#13;&#10;};&#13;&#10;&#13;&#10;console.log(producto.calcularImpuesto());&#13;&#10;producto.nombreNuevo = &#34;Camiseta nueva&#34;;&#13;&#10;console.log(producto.nombreTraer);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:38:27', NULL),
(35, 'objeto uso this', 'el uso de this en un objeto literal', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto dentro de otro objeto&#13;&#10;const objeto = {&#13;&#10;    nombre: &#34;Juan&#34;,&#13;&#10;    apellido: &#34;Perez&#34;,&#13;&#10;    edad: 30,&#13;&#10;    mostrarInfo: function() {&#13;&#10;        console.log(this.nombre + &#34; &#34; + this.apellido + &#34; &#34; + this.edad);&#13;&#10;    }&#13;&#10;}&#13;&#10;objeto.mostrarInfo();&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:39:17', NULL),
(36, 'Objeto constructor', 'Objeto constructor uso de funciones', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto constructor&#13;&#10;function Producto(nombre, precio) {&#13;&#10;    this.nombre = nombre;&#13;&#10;    this.precio = precio;&#13;&#10;}&#13;&#10;&#13;&#10;const producto2 = new Producto(&#39;Camiseta&#39;, 20);&#13;&#10;console.log(producto2);&#13;&#10;&#13;&#10;const producto3 = new Producto(&#39;Pantalon&#39;, 30);&#13;&#10;console.log(producto3);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:39:49', NULL),
(37, 'llave y valor de objeto', 'obtener la llave y valor de objeto', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//objeto literal&#13;&#10;const producto = {&#13;&#10;    nombre: &#39;Camiseta&#39;,&#13;&#10;    precio: 20&#13;&#10;};&#13;&#10;&#13;&#10;//llave del objeto&#13;&#10;//retorna array con las llaves del objeto&#13;&#10;console.log(Object.keys(producto));&#13;&#10;&#13;&#10;//valor del objeto&#13;&#10;//retorna array con los valores del objeto&#13;&#10;console.log(Object.values(producto));&#13;&#10;&#13;&#10;//retorna array con las llaves y valores del objeto&#13;&#10;console.log(Object.entries(producto));&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:40:23', NULL),
(38, 'array y algunos metodos', 'array y algunos metodos destructuring array', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//array&#13;&#10;const numbers = [1, 2, 3, 4, 5];&#13;&#10;console.log(numbers);&#13;&#10;&#13;&#10;const meses = new Array(&#34;Enero&#34;, &#34;Febrero&#34;, &#34;Marzo&#34;);&#13;&#10;console.log(meses);&#13;&#10;console.table(meses);&#13;&#10;&#13;&#10;//acceder elemento del array&#13;&#10;console.log(meses[1]);&#13;&#10;&#13;&#10;//longitud del array&#13;&#10;console.log(meses.length);&#13;&#10;&#13;&#10;//agregar elemento al array&#13;&#10;meses.push(&#34;Abril&#34;);&#13;&#10;console.log(meses);&#13;&#10;&#13;&#10;//eliminar ultimo elemento del array&#13;&#10;meses.pop();&#13;&#10;console.log(meses);&#13;&#10;&#13;&#10;//eliminar primer elemento del array&#13;&#10;meses.shift();&#13;&#10;console.log(meses);&#13;&#10;&#13;&#10;//OTRA FORMA DE AGREGAR&#13;&#10;const carrito = [];&#13;&#10;&#13;&#10;const producto = {&#13;&#10;    nombre: &#34;Monitor&#34;,&#13;&#10;    precio: 300,&#13;&#10;    cantidad: 2&#13;&#10;};&#13;&#10;// carrito.push(producto);&#13;&#10;// console.table(carrito);&#13;&#10;&#13;&#10;const producto2 = {&#13;&#10;    nombre: &#34;Teclado&#34;,&#13;&#10;    precio: 200,&#13;&#10;    cantidad: 1&#13;&#10;};&#13;&#10;// carrito.push(producto2);&#13;&#10;// console.table(carrito);&#13;&#10;&#13;&#10;const producto3 = {&#13;&#10;    nombre: &#34;Ratón&#34;,&#13;&#10;    precio: 100,&#13;&#10;    cantidad: 1&#13;&#10;};&#13;&#10;&#13;&#10;//forma imperativa //nuevo arreglo sin cambiar el original&#13;&#10;let nuevoCarrito = [...carrito, producto];&#13;&#10;nuevoCarrito = [...nuevoCarrito, producto2];&#13;&#10;nuevoCarrito = [producto3, ...nuevoCarrito];&#13;&#10;console.table(nuevoCarrito);&#13;&#10;&#13;&#10;//eliminar elemtos con splice(indice, cantidad)&#13;&#10;nuevoCarrito.splice(1, 1);&#13;&#10;console.table(nuevoCarrito);&#13;&#10;&#13;&#10;//destructuring array&#13;&#10;const [primero, segundo, tercero] = nuevoCarrito;&#13;&#10;console.log(primero);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:41:44', NULL),
(39, 'recorrer array', 'metodos string en javascript tilde invertida', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const meses = new Array(&#34;Enero&#34;, &#34;Febrero&#34;, &#34;Marzo&#34;);&#13;&#10;console.log(meses);&#13;&#10;console.table(meses);&#13;&#10;&#13;&#10;//recorrer array con for&#13;&#10;for (let i = 0; i &#38;lt; meses.length; i++) {&#13;&#10;    console.log(meses[i]);&#13;&#10;}&#13;&#10;&#13;&#10;//recorrer array con forEach&#13;&#10;meses.forEach(function(mes) {&#13;&#10;    console.log(mes);&#13;&#10;});&#13;&#10;&#13;&#10;//recorrer array con forEach y arrow function&#13;&#10;meses.forEach(mes =&#38;gt; console.log(mes));&#13;&#10;&#13;&#10;//recorrer array con for in&#13;&#10;for (let i in meses) {&#13;&#10;    console.log(meses[i]);&#13;&#10;}&#13;&#10;&#13;&#10;const carrito = [{&#13;&#10;        &#34;nombre&#34;: &#34;monitor&#34;,&#13;&#10;        &#34;precio&#34;: 100&#13;&#10;    },&#13;&#10;    {&#13;&#10;        &#34;nombre&#34;: &#34;teclado&#34;,&#13;&#10;        &#34;precio&#34;: 50&#13;&#10;    },&#13;&#10;    {&#13;&#10;        &#34;nombre&#34;: &#34;raton&#34;,&#13;&#10;        &#34;precio&#34;: 10&#13;&#10;    }&#13;&#10;];&#13;&#10;&#13;&#10;//recorrer el array con forEach&#13;&#10;carrito.forEach(function(producto) {&#13;&#10;    console.log(producto.nombre);&#13;&#10;});&#13;&#10;&#13;&#10;//recorrer .map //crea un array con los resultados de la funcion&#13;&#10;const nombres = carrito.map(function(producto) {&#13;&#10;    return producto.nombre;&#13;&#10;});&#13;&#10;console.log(nombres); //retorna array con los nombres de los productos&#13;&#10;&#13;&#10;//foreach&#13;&#10;const tareas = [&#39;correr&#39;, &#39;jugar&#39;, &#39;comer&#39;, &#39;dormir&#39;, &#39;ver&#39;];&#13;&#10;tareas.forEach(function(element, index) {&#13;&#10;    console.log(`${index} : ${element}`);&#13;&#10;})&#13;&#10;&#13;&#10;const carrito = [{&#13;&#10;        nombre: &#39;tv&#39;,&#13;&#10;        precio: 250,&#13;&#10;        cant: 1&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;mesa&#39;,&#13;&#10;        precio: 60,&#13;&#10;        cant: 2&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;sillas&#39;,&#13;&#10;        precio: 36,&#13;&#10;        cant: 5&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;cama&#39;,&#13;&#10;        precio: 200,&#13;&#10;        cant: 1&#13;&#10;    },&#13;&#10;];&#13;&#10;&#13;&#10;carrito.forEach(function(element, index) {&#13;&#10;    console.log(`${index} : ${element.nombre}`);&#13;&#10;})&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:44:15', NULL),
(40, 'Array methods', 'diveros metodos en array', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//array meses&#13;&#10;const meses = [&#39;enero&#39;, &#39;febrero&#39;, &#39;marzo&#39;, &#39;abril&#39;, &#39;mayo&#39;];&#13;&#10;//array con objetos&#13;&#10;const carrito = [{&#13;&#10;        nombre: &#39;tv&#39;,&#13;&#10;        precio: 250,&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;mesa&#39;,&#13;&#10;        precio: 60,&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;sillas&#39;,&#13;&#10;        precio: 36,&#13;&#10;    },&#13;&#10;    {&#13;&#10;        nombre: &#39;cama&#39;,&#13;&#10;        precio: 200,&#13;&#10;    },&#13;&#10;]&#13;&#10;&#13;&#10;//comprobar si un elemento existe en un arreglo&#13;&#10;const rest = meses.includes(&#39;marzo&#39;);&#13;&#10;console.log(rest); //true&#13;&#10;&#13;&#10;//SOME&#13;&#10;//comprobar si existe en array con objeto&#13;&#10;const existe = carrito.some(producto =&#38;gt; producto.nombre == &#39;sillasX&#39;);&#13;&#10;console.log(existe); //false&#13;&#10;&#13;&#10;const mesEx = meses.some(mes =&#38;gt; &#39;marzo&#39;);&#13;&#10;console.log(mesEx); //true&#13;&#10;&#13;&#10;//MAP&#13;&#10;//multiplicar *3 a cada elemento del array&#13;&#10;let number = [1, 2, 3, 4, 5, 6];&#13;&#10;let newNumber = number.map(e =&#38;gt; e * 2);&#13;&#10;console.log(newNumber);&#13;&#10;&#13;&#10;//FILTER&#13;&#10;//filtrar un elemento del array,&#13;&#10;let alimento = [&#39;huevo&#39;, &#39;fideos&#39;, &#39;apio&#39;, &#39;uva&#39;, &#39;pera&#39;, &#39;uva&#39;];&#13;&#10;let uva = alimento.filter(alim =&#38;gt; alim == &#39;uva&#39;);&#13;&#10;console.log(uva); //[ &#39;uva&#39;,  &#39;uva&#39;];&#13;&#10;&#13;&#10;let noUva = alimento.filter(alim =&#38;gt; alim != &#39;uva&#39;);&#13;&#10;console.log(noUva); //[&#39;huevo&#39;, &#39;fideos&#39;, &#39;apio&#39;, &#39;pera&#39;];&#13;&#10;&#13;&#10;//FIND&#13;&#10;//encuentra y debuelve&#13;&#10;let uva2 = alimento.find(alim =&#38;gt; alim == &#39;uva&#39;);&#13;&#10;console.log(uva2); //retorna un string &#39;uva&#39;&#13;&#10;&#13;&#10;//findIndex&#13;&#10;//buscar el indice de un elemento&#13;&#10;let uvaIndex = alimento.findIndex(alim =&#38;gt; alim == &#39;uva&#39;);&#13;&#10;console.log(uvaIndex); //retorna 3&#13;&#10;&#13;&#10;//FILL&#13;&#10;//agregar o cambiar todos los elementos del array&#13;&#10;let addAlimento = alimento.fill(&#39;mango&#39;);&#13;&#10;console.log(addAlimento); //[&#39;mango&#39;, &#39;mango&#39;, &#39;mango&#39;, &#39;mango&#39;, &#39;mango&#39;, &#39;mango&#39;]&#13;&#10;&#13;&#10;let igual = [&#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;a&#39;, &#39;a&#39;];&#13;&#10;let diferente = [&#39;a&#39;, &#39;b&#39;, &#39;a&#39;, &#39;a&#39;, &#39;c&#39;];&#13;&#10;&#13;&#10;//EVERY&#13;&#10;//si todos los elementos del array son iguales&#13;&#10;let result1 = igual.every(e =&#38;gt; e == &#39;a&#39;);&#13;&#10;console.log(result1); //true&#13;&#10;let result2 = diferente.every(e =&#38;gt; e == &#39;a&#39;);&#13;&#10;console.log(result2); //false&#13;&#10;&#13;&#10;//SOME&#13;&#10;//ver si existe el elemento en el array&#13;&#10;let result4 = igual.some(e =&#38;gt; e == &#39;a&#39;);&#13;&#10;console.log(result4); //true&#13;&#10;let result5 = diferente.some(e =&#38;gt; e == &#39;a&#39;);&#13;&#10;console.log(result5); //true&#13;&#10;let result6 = igual.some(e =&#38;gt; e == &#39;b&#39;);&#13;&#10;console.log(result6); //false&#13;&#10;&#13;&#10;//REDUCE //sirve para unir todos los elementos en uno&#13;&#10;let total = 0;&#13;&#10;carrito.forEach(product =&#38;gt; total += product.precio);&#13;&#10;console.log(total); //546&#13;&#10;&#13;&#10;let result7 = carrito.reduce((total, product) =&#38;gt; total + product.precio, 0);&#13;&#10;console.log(result7); //546&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:45:33', NULL),
(41, 'Unir arrays', 'Unir arrays  spread operator', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//array colores&#13;&#10;const color = [&#39;azul&#39;, &#39;lila&#39;, &#39;blanco&#39;];&#13;&#10;const utiles = [&#39;Lapiz&#39;, &#39;borrador&#39;];&#13;&#10;const num = [0, 1, 2, 3];&#13;&#10;&#13;&#10;//.cont&#13;&#10;let resultado = color.concat(utiles, num);&#13;&#10;console.log(resultado);&#13;&#10;&#13;&#10;//spread operator&#13;&#10;let result = [...color, ...utiles, ...num];&#13;&#10;console.log(result);&#13;&#10;&#13;&#10;//[&#39;azul&#39;, &#39;lila&#39;, &#39;blanco&#39;, &#39;Lapiz&#39;, &#39;borrador&#39;, 0, 1, 2, 3]&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:46:16', NULL),
(42, 'loops formas', 'loops formas recorrer', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//loops - bucles&#13;&#10;//for - bucle for&#13;&#10;for (let i = 0; i &#38;lt; 10; i++) {&#13;&#10;    console.log(i);&#13;&#10;}&#13;&#10;&#13;&#10;//while - bucle while&#13;&#10;let i = 0;&#13;&#10;while (i &#38;lt; 10) {&#13;&#10;    console.log(i);&#13;&#10;    i++;&#13;&#10;}&#13;&#10;&#13;&#10;//do while - bucle do while&#13;&#10;i = 0;&#13;&#10;do {&#13;&#10;    console.log(i);&#13;&#10;    i++;&#13;&#10;} while (i &#38;lt; 10);&#13;&#10;&#13;&#10;//forEach - bucle forEach&#13;&#10;const array = [1, 2, 3, 4, 5];&#13;&#10;array.forEach(function(item) {&#13;&#10;    console.log(item);&#13;&#10;});&#13;&#10;&#13;&#10;//for in - bucle for in // claves del objeto&#13;&#10;const obj = {&#13;&#10;    name: &#34;Roberto&#34;,&#13;&#10;    age: 30&#13;&#10;};&#13;&#10;for (let key in obj) {&#13;&#10;    console.log(key);&#13;&#10;}&#13;&#10;&#13;&#10;//for of - bucle for of //retorna los valores de solo array&#13;&#10;const colors = [&#34;red&#34;, &#34;green&#34;, &#34;blue&#34;];&#13;&#10;for (let key in colors) { //clave&#13;&#10;    console.log(key);&#13;&#10;}&#13;&#10;for (let value of colors) { //valor&#13;&#10;    console.log(value);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:47:06', NULL),
(43, 'tipos de Funciones', 'diversas formas de funcion funcion flecha', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//function - basicamente una funcion que se puede llamar&#13;&#10;function myFunction() {&#13;&#10;    console.log(&#34;Hello World&#34;);&#13;&#10;}&#13;&#10;myFunction();&#13;&#10;&#13;&#10;//function with parameters - funcion con parametros&#13;&#10;function myFunction2(name, age) {&#13;&#10;    console.log(&#34;Hello &#34; + name + &#34; you are &#34; + age + &#34; years old&#34;);&#13;&#10;}&#13;&#10;myFunction2(&#34;Roberto&#34;, &#34;30&#34;);&#13;&#10;&#13;&#10;//function anonymous - funcion anonima&#13;&#10;const myFunction3 = function() {&#13;&#10;    console.log(&#34;Hello World&#34;);&#13;&#10;}&#13;&#10;myFunction3();&#13;&#10;&#13;&#10;//function with parameters anonymous - funcion anonima con parametros&#13;&#10;const myFunction4 = function(name, age) {&#13;&#10;    console.log(&#34;Hello &#34; + name + &#34; you are &#34; + age + &#34; years old&#34;);&#13;&#10;}&#13;&#10;myFunction4(&#34;Roberto&#34;, &#34;30&#34;);&#13;&#10;&#13;&#10;//arrow function - funcion flecha&#13;&#10;const myFunction5 = () =&#38;gt; {&#13;&#10;    console.log(&#34;Hello World&#34;);&#13;&#10;}&#13;&#10;myFunction5();&#13;&#10;&#13;&#10;//arrow function with parameters - funcion flecha con parametros&#13;&#10;let myFunction6 = (name, age) =&#38;gt; {&#13;&#10;    console.log(&#34;Hello &#34; + name + &#34; you are &#34; + age + &#34; years old&#34;);&#13;&#10;}&#13;&#10;myFunction6(&#34;Roberto&#34;, &#34;30&#34;);&#13;&#10;&#13;&#10;//concise arrow function with arguments - función de flecha concisa con argumentos&#13;&#10;const myFunction9 = (name, age) =&#38;gt; console.log(&#34;Hello &#34; + name + &#34; you are &#34; + age + &#34; years old&#34;);&#13;&#10;myFunction9(&#34;Roberto&#34;, &#34;30&#34;);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:48:01', NULL),
(44, 'fetch - Async Await', 'consultar enlace, base de datos', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const link = &#34;https://jsonplaceholder.typicode.com/users&#34;;&#13;&#10;&#13;&#10;//fetch&#13;&#10;fetch(link)&#13;&#10;    .then(response =&#38;gt; response.json()) // la respuesta es un json&#13;&#10;    .then(data =&#38;gt; {&#13;&#10;        console.log(data)&#13;&#10;    }) // imprimir el json&#13;&#10;    .catch(error =&#38;gt; console.log(error)); // si hay error imprimirlo&#13;&#10;&#13;&#10;//async await&#13;&#10;async function getDataA() {&#13;&#10;    const response = await fetch(link); // espera a que la respuesta llegue&#13;&#10;    const data = await response.json(); // la respuesta es un json&#13;&#10;    console.log(data); // imprimir el json&#13;&#10;}&#13;&#10;getDataA();&#13;&#10;&#13;&#10;//async await funcion flecha&#13;&#10;const getDataB = async () =&#38;gt; {&#13;&#10;    const response = await fetch(link); // espera a que la respuesta llegue&#13;&#10;    const data = await response.json(); // la respuesta es un json&#13;&#10;    console.log(data); // imprimir el json&#13;&#10;}&#13;&#10;getDataB();&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:49:07', NULL),
(45, 'Seleccionar Elementos del HTML', 'Seleccionar Elementos del HTML dom', '&#60;p&#62;HTML&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container-sm m-3 botones&#34; id=&#34;botones&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-primary&#34; id=&#34;azul&#34;&#38;gt;Primary&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-secondary&#34; id=&#34;plomo&#34;&#38;gt;Secondary&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-success&#34;&#38;gt;Success&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-danger&#34; id=&#34;rojo&#34;&#38;gt;Danger&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-warning&#34;&#38;gt;Warning&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-info&#34;&#38;gt;Info&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-light&#34;&#38;gt;Light&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-dark&#34;&#38;gt;Dark&#38;lt;/button&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//seleccionar una o varias clases&#13;&#10;const clase = document.getElementsByClassName(&#34;btn&#34;);&#13;&#10;console.log(clase); //retorna el nombre de todas las clases&#13;&#10;&#13;&#10;//selecciona por id &#13;&#10;const idRojo = document.getElementById(&#34;rojo&#34;);&#13;&#10;console.log(idRojo); //retorna el elemento que contiene al id y todo su contenido&#13;&#10;&#13;&#10;//querySelector //retorna el elemento que contiene al id y todo su contenido&#13;&#10;const botones = document.querySelector(&#34;.botones&#34;);&#13;&#10;console.log(botones);&#13;&#10;&#13;&#10;const btn = document.querySelector(&#34;#botones&#34;);&#13;&#10;console.log(btn);&#13;&#10;&#13;&#10;//seleccionar el tercer boton&#13;&#10;const boton3 = document.querySelector(&#34;.botones .btn:nth-child(3)&#34;);&#13;&#10;console.log(boton3);&#13;&#10;&#13;&#10;//querySelector retorna el primero si hay varios botones&#13;&#10;const primerBtn = document.querySelector(&#34;.btn&#34;);&#13;&#10;console.log(primerBtn);&#13;&#10;&#13;&#10;//querySelectorAll retorna todos los botones en array&#13;&#10;const todosBtn = document.querySelectorAll(&#34;.btn&#34;);&#13;&#10;console.log(todosBtn);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:50:36', NULL),
(46, 'Modificar texto e Imagen', 'Modificar texto e Imagen dom', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container-sm m-3 titulo&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;p class=&#34;text-start tituloTexto&#34;&#38;gt;Start aligned text on all &#38;lt;span class=&#34;text-danger&#34;&#38;gt;viewport&#38;lt;/span&#38;gt; sizes.&#38;lt;/p&#38;gt;&#13;&#10;&#9;&#38;lt;img src=&#34;https://i.ytimg.com/vi/6P1SDNc7mlI/hqdefault.jpg&#34; class=&#34;img-thumbnail imagen&#34; alt=&#34;img&#34;&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;let tituloTexto = document.querySelector(&#34;.tituloTexto&#34;);&#13;&#10;console.log(tituloTexto); //recupera el elemento&#13;&#10;&#13;&#10;console.log(tituloTexto.innerHTML); //retorna contenido y si tiene dentro html tambien&#13;&#10;console.log(tituloTexto.innerText); //retorna contenido sin html si CSS visibility: hidden no se ve&#13;&#10;console.log(tituloTexto.textContent); //retorna contenido&#13;&#10;&#13;&#10;//modificar tituloTexto&#13;&#10;tituloTexto.textContent = &#34;Hola mundo&#34;;&#13;&#10;&#13;&#10;//cambiar imagen&#13;&#10;let imagen = document.querySelector(&#34;.imagen&#34;);&#13;&#10;imagen.src = &#34;https://i.pinimg.com/originals/aa/9f/a9/aa9fa950aaa60ce5d565e45476f9d0e5.png&#34;;&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:51:34', NULL),
(47, 'modificar CSS', 'modificar CSS y cambios de estilo', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container-sm m-3 titulo&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;p class=&#34;text-start tituloTexto&#34;&#38;gt;Start aligned text on all &#38;lt;span class=&#34;text-danger&#34;&#38;gt;viewport&#38;lt;/span&#38;gt; sizes.&#38;lt;/p&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//modificar estilos&#13;&#10;let titulo = document.querySelector(&#39;.tituloTexto&#39;);&#13;&#10;// titulo.style.color = &#39;red&#39;;&#13;&#10;// titulo.style.fontSize = &#39;30px&#39;;&#13;&#10;// titulo.style.fontWeight = &#39;bold&#39;;&#13;&#10;// console.log(titulo);&#13;&#10;&#13;&#10;//classList&#13;&#10;console.log(titulo.classList); //array de las clases&#13;&#10;&#13;&#10;//add - agregar clases&#13;&#10;titulo.classList.add(&#39;text-danger&#39;);&#13;&#10;&#13;&#10;//remove - remover clase&#13;&#10;titulo.classList.remove(&#39;text-danger&#39;);&#13;&#10;&#13;&#10;//toggle - si no existe la clase la añade, si existe la quita&#13;&#10;titulo.classList.toggle(&#39;text-danger&#39;);&#13;&#10;&#13;&#10;//contains - verifica si la clase existe - devuelve true o false&#13;&#10;console.log(titulo.classList.contains(&#39;text-danger&#39;)); //true&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:52:32', NULL),
(48, 'Padre Hijo Js', 'herencia Padre Hijo Js dom', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;card p-3 m-3&#34; id=&#34;lista&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;ul class=&#34;list-group padre&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;primero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;segundo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;tercero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;cuarto&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;quinto - ultimo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//Traversing the DOM&#13;&#10;&#13;&#10;let padre = document.querySelector(&#39;.padre&#39;);&#13;&#10;console.log(padre);&#13;&#10;&#13;&#10;//hijos&#13;&#10;let hijos = padre.children;&#13;&#10;console.log(hijos); //retorna una lista array de los hijos - MEJOR&#13;&#10;&#13;&#10;//hijos&#13;&#10;let hijos2 = padre.childNodes;&#13;&#10;console.log(hijos2); //retorna una lista de los hijos y los nodos (saltos de linea)&#13;&#10;&#13;&#10;//primer hijo&#13;&#10;let primerHijo = padre.firstElementChild;&#13;&#10;console.log(primerHijo); //retorna el primer hijo - MEJOR&#13;&#10;&#13;&#10;//ultimo hijo&#13;&#10;let ultimoHijo = padre.lastElementChild;&#13;&#10;console.log(ultimoHijo); //retorna el ultimo hijo - MEJOR&#13;&#10;&#13;&#10;//===================&#13;&#10;let hijo = document.querySelector(&#39;.hijo&#39;);&#13;&#10;console.log(hijo); //retorna el primer hijo de la lista&#13;&#10;&#13;&#10;//padre&#13;&#10;let padre2 = hijo.parentNode;&#13;&#10;console.log(padre2); //retorna el padre del hijo&#13;&#10;&#13;&#10;//padre de padre&#13;&#10;let padre3 = hijo.parentElement;&#13;&#10;console.log(padre3); //retorna el padre del hijo - MEJOR&#13;&#10;&#13;&#10;//===================&#13;&#10;//Hermanos&#13;&#10;let hermanos = hijo.nextElementSibling;&#13;&#10;console.log(hermanos); //retorna el hermano siguiente del hijo&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:53:33', NULL),
(49, 'Eliminar Elemento', 'Eliminar Elemento padre hijo', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;card p-3 m-3&#34; id=&#34;lista&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;ul class=&#34;list-group padre&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;primero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;segundo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;tercero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;cuarto&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;quinto - ultimo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//eliminar elementos del dom&#13;&#10;let hijo = document.querySelector(&#39;.hijo&#39;);&#13;&#10;//eliminar el mismo&#13;&#10;hijo.remove();&#13;&#10;&#13;&#10;//eliminar desde el padre&#13;&#10;let padre = document.querySelector(&#39;.padre&#39;);&#13;&#10;padre.removeChild(padre.children[2]);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:54:26', NULL),
(50, 'Generar HTML', 'Generar HTML de forma de crear elementos', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;card p-3 m-3&#34; id=&#34;lista&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;ul class=&#34;list-group padre&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;primero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;segundo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;tercero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;cuarto&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item hijo&#34;&#38;gt;quinto - ultimo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//GENERAR HTML&#13;&#10;&#13;&#10;//crear elementos - etiqueta&#13;&#10;let lista = document.createElement(&#39;A&#39;);&#13;&#10;//agregar clase&#13;&#10;lista.className = &#39;list-group-item hijo&#39;;&#13;&#10;//agregar texto&#13;&#10;lista.innerText = &#39;sexto&#39;;&#13;&#10;//agregar href&#13;&#10;lista.href = &#39;#&#39;;&#13;&#10;//agregar target&#13;&#10;lista.target = &#39;_blank&#39;;&#13;&#10;//agregar id&#13;&#10;lista.id = &#39;sexto&#39;;&#13;&#10;//agregar atributo&#13;&#10;lista.setAttribute(&#39;data-toggle&#39;, &#39;modal&#39;);&#13;&#10;&#13;&#10;//agregar al padre despues del ultimo hijo&#13;&#10;let padre = document.querySelector(&#39;.padre&#39;);&#13;&#10;padre.appendChild(lista);&#13;&#10;&#13;&#10;console.log(lista);&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:55:42', NULL),
(51, 'Evento Mouse', 'Evento Mouse cambios', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container-sm m-3&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;form action=&#34;pruebas.php&#34; id=&#34;formulario&#34; method=&#34;post&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;div class=&#34;input-group mb-3 evento&#34;&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;span class=&#34;input-group-text&#34; id=&#34;basic-addon1&#34;&#38;gt;@&#38;lt;/span&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;input type=&#34;text&#34; class=&#34;form-control teclado&#34; placeholder=&#34;Username&#34; aria-label=&#34;Username&#34; aria-describedby=&#34;basic-addon1&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;/div&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;!-- submit --&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;button type=&#34;submit&#34; class=&#34;btn btn-primary&#34;&#38;gt;Enviar&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;/form&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//verifa que todo el documento este cargado&#13;&#10;document.addEventListener(&#34;DOMContentLoaded&#34;, function() {&#13;&#10;    console.log(&#34;documento listo&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//eventos&#13;&#10;let evento = document.querySelector(&#34;.evento&#34;);&#13;&#10;&#13;&#10;//evento del mouse click&#13;&#10;evento.addEventListener(&#34;click&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;click en el elemento&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//evento mousedown -similar a click&#13;&#10;evento.addEventListener(&#34;mousedown&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;mousedown en el elemento&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//evento del mouse double click&#13;&#10;evento.addEventListener(&#34;dblclick&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;doble click en el elemento&#34;);&#13;&#10;})&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:56:57', NULL),
(52, 'Evento input teclado', 'Evento input teclado cuando se ingresa datos', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container-sm m-3&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;form action=&#34;pruebas.php&#34; id=&#34;formulario&#34; method=&#34;post&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;div class=&#34;input-group mb-3 evento&#34;&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;span class=&#34;input-group-text&#34; id=&#34;basic-addon1&#34;&#38;gt;@&#38;lt;/span&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;input type=&#34;text&#34; class=&#34;form-control teclado&#34; placeholder=&#34;Username&#34; aria-label=&#34;Username&#34; aria-describedby=&#34;basic-addon1&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;/div&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;!-- submit --&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;button type=&#34;submit&#34; class=&#34;btn btn-primary&#34;&#38;gt;Enviar&#38;lt;/button&#38;gt;&#13;&#10;&#9;&#38;lt;/form&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//imput evento&#13;&#10;let teclado = document.querySelector(&#34;.teclado&#34;);&#13;&#10;//keydown - cuando se presiona una tecla&#13;&#10;teclado.addEventListener(&#34;keydown&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;tecla presionada&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//keyup - cuando se suelta una tecla&#13;&#10;teclado.addEventListener(&#34;keyup&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;tecla soltada&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//keypress - cuando se presiona y suelta una tecla&#13;&#10;teclado.addEventListener(&#34;keypress&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;tecla presionada y soltada&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//blur - cuando entra al formulario y se activa cuando sale del formulario&#13;&#10;teclado.addEventListener(&#34;blur&#34;, () =&#38;gt; {&#13;&#10;    console.log(&#34;........&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;// input - es todo en uno de los anteriores&#13;&#10;teclado.addEventListener(&#34;input&#34;, (event) =&#38;gt; {&#13;&#10;    //event.target - retorna el elmento del imput (html)&#13;&#10;    //event.target.value - obtiene el valor del input&#13;&#10;    console.log(event.target.value);&#13;&#10;})&#13;&#10;&#13;&#10;let formulario = document.querySelector(&#34;#formulario&#34;);&#13;&#10;&#13;&#10;//submit - cuando se presiona el boton de enviar&#13;&#10;formulario.addEventListener(&#34;submit&#34;, (event) =&#38;gt; {&#13;&#10;    //detiene la acccion por defecto del formulario o enlace&#13;&#10;    event.preventDefault();&#13;&#10;    console.log(&#34;enviando formulario&#34;);&#13;&#10;})&#13;&#10;&#13;&#10;//otra formma de hacer el submit&#13;&#10;formulario.addEventListener(&#34;submit&#34;, validarFormulario);&#13;&#10;//validar formulario&#13;&#10;function validarFormulario(event) {&#13;&#10;    event.preventDefault();&#13;&#10;    console.log(&#34;enviando formulario&#34;);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:58:15', NULL),
(53, 'event Scroll js', 'event Scroll js cuando se desliza la pantalla', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//event scroll&#13;&#10;window.onscroll = function() {&#13;&#10;    scrollFunction()&#13;&#10;};&#13;&#10;// //scrollFunction&#13;&#10;function scrollFunction() {&#13;&#10;    if (document.body.scrollTop &#38;gt; 20 || document.documentElement.scrollTop &#38;gt; 20) {&#13;&#10;        console.log(&#34;scroll&#34;);&#13;&#10;    } else {&#13;&#10;        console.log(&#34;scroll abajo&#34;)&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;//otra Forma de hacerlo&#13;&#10;window.addEventListener(&#34;scroll&#34;, () =&#38;gt; {&#13;&#10;    //pixcels vertically&#13;&#10;    // let pixels = window.pageYOffset;&#13;&#10;    // console.log(pixels);&#13;&#10;    // let scrollPX = window.scrollY;&#13;&#10;    // console.log(scrollPX);&#13;&#10;&#13;&#10;    const ultimoElemento = document.querySelector(&#34;.hijo5&#34;);&#13;&#10;    //getBoundingClientRect obtiene el ubicacion del elemento&#13;&#10;    const coordenadas = ultimoElemento.getBoundingClientRect();&#13;&#10;&#13;&#10;    if (coordenadas &#38;lt; 200) {&#13;&#10;        console.log(&#34;esta arriba&#34;);&#13;&#10;    } else {&#13;&#10;        console.log(&#34;ya viste el elemento&#34;);&#13;&#10;    }&#13;&#10;});&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 14:58:53', NULL),
(54, 'obtener elemento especifico', 'obtener elemento especifico y crear un evento', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;card p-3 m-3&#34; id=&#34;lista&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;ul class=&#34;list-group padre p-3&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item primero&#34;&#38;gt;primero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item segundo&#34;&#38;gt;segundo&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;a class=&#34;list-group-item tercero&#34;&#38;gt;tercero&#38;lt;/a&#38;gt;&#13;&#10;&#9;&#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//identificar el elemento seleccionado&#13;&#10;let lista = document.querySelector(&#39;#lista&#39;);&#13;&#10;lista.addEventListener(&#39;click&#39;, (e) =&#38;gt; {&#13;&#10;    // console.log(e.target);&#13;&#10;    if (e.target.classList.contains(&#39;primero&#39;)) {&#13;&#10;        console.log(&#39;primero&#39;);&#13;&#10;    }&#13;&#10;    if (e.target.classList.contains(&#39;segundo&#39;)) {&#13;&#10;        //togle&#13;&#10;        e.target.classList.toggle(&#39;active&#39;);&#13;&#10;    }&#13;&#10;});&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 15:00:25', NULL),
(55, 'localstorage JS', 'localstorage JS almacenar en memoria de la web', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//localstorage buscar en aplication&#13;&#10;//localstorage - crear una variable&#13;&#10;localStorage.setItem(&#34;nombre&#34;, &#34;Carlos&#34;);&#13;&#10;localStorage.setItem(&#34;apellido&#34;, &#34;Gonzalez&#34;);&#13;&#10;localStorage.setItem(&#34;edad&#34;, &#34;25&#34;);&#13;&#10;//array&#13;&#10;let array = [&#34;Carlos&#34;, &#34;Gonzalez&#34;, &#34;25&#34;];&#13;&#10;localStorage.setItem(&#34;array&#34;, JSON.stringify(array));&#13;&#10;&#13;&#10;//objeto&#13;&#10;let objeto = {&#13;&#10;    nombre: &#34;Carlos&#34;,&#13;&#10;    apellido: &#34;Gonzalez&#34;,&#13;&#10;    edad: &#34;25&#34;&#13;&#10;};&#13;&#10;localStorage.setItem(&#34;objeto&#34;, JSON.stringify(objeto));&#13;&#10;&#13;&#10;//localstorage - leer una variable&#13;&#10;let nombre = localStorage.getItem(&#34;nombre&#34;);&#13;&#10;let apellido = localStorage.getItem(&#34;apellido&#34;);&#13;&#10;let edad = localStorage.getItem(&#34;edad&#34;);&#13;&#10;let array2 = JSON.parse(localStorage.getItem(&#34;array&#34;));&#13;&#10;let objeto2 = JSON.parse(localStorage.getItem(&#34;objeto&#34;));&#13;&#10;console.log(nombre);&#13;&#10;console.log(apellido);&#13;&#10;console.log(edad);&#13;&#10;console.log(array2);&#13;&#10;console.log(objeto2);&#13;&#10;&#13;&#10;//localstorage - eliminar una variable&#13;&#10;localStorage.removeItem(&#34;nombre&#34;);&#13;&#10;localStorage.removeItem(&#34;apellido&#34;);&#13;&#10;localStorage.removeItem(&#34;edad&#34;);&#13;&#10;localStorage.removeItem(&#34;array&#34;);&#13;&#10;localStorage.removeItem(&#34;objeto&#34;);&#13;&#10;&#13;&#10;//localstorage - actualizar una variable - usar la misma clave&#13;&#10;localStorage.setItem(&#34;nombre&#34;, &#34;Carlos&#34;);&#13;&#10;&#13;&#10;//localstorage - limpiar todo&#13;&#10;localStorage.clear();&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 15:01:43', NULL),
(56, 'Truco Event Listener', 'agregar elementos y delegar los eventos', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;album bg-light&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;div class=&#34;container border border-dark bg-dark p-5&#34;&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;button type=&#34;button&#34; class=&#34;btn btn-success btn-agregar&#34;&#38;gt;Agregar Elemento&#38;lt;/button&#38;gt;&#13;&#10;&#13;&#10;&#9;&#9;&#38;lt;ul class=&#34;list-group mt-4 lista&#34;&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;li class=&#34;mb-3 list-group-item&#34;&#38;gt;Elemento&#38;lt;/li&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;li class=&#34;mb-3 list-group-item&#34;&#38;gt;Elemento&#38;lt;/li&#38;gt;&#13;&#10;&#9;&#9;&#9;&#38;lt;li class=&#34;mb-3 list-group-item&#34;&#38;gt;Elemento&#38;lt;/li&#38;gt;&#13;&#10;&#9;&#9;&#38;lt;/ul&#38;gt;&#13;&#10;&#9;&#38;lt;/div&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const lista = document.querySelector(&#39;.lista&#39;);&#13;&#10;const btnAgregar = document.querySelector(&#39;.btn-agregar&#39;);&#13;&#10;&#13;&#10;//agregar elemento&#13;&#10;btnAgregar.addEventListener(&#39;click&#39;, () =&#38;gt; {&#13;&#10;&#13;&#10;    const li = document.createElement(&#39;li&#39;);&#13;&#10;    li.className = &#39;mb-3 list-group-item&#39;;&#13;&#10;    li.innerHTML = &#39;Elemento&#39;;&#13;&#10;    lista.appendChild(li);&#13;&#10;&#13;&#10;    // agregarListeners();&#13;&#10;});&#13;&#10;&#13;&#10;// FORMA INCORRECTA&#13;&#10;// agregar active a los elementos&#13;&#10;const agregarListeners = () =&#38;gt; {&#13;&#10;    lista.childNodes.forEach(element =&#38;gt; {&#13;&#10;        element.addEventListener(&#39;click&#39;, (e) =&#38;gt; {&#13;&#10;            e.target.classList.toggle(&#39;active&#39;);&#13;&#10;        });&#13;&#10;    });&#13;&#10;}&#13;&#10;agregarListeners();&#13;&#10;&#13;&#10;// FORMA CORRECTA - DELEGAR EVENTOS&#13;&#10;lista.addEventListener(&#39;click&#39;, (e) =&#38;gt; {&#13;&#10;    if (e.target.classList.contains(&#39;list-group-item&#39;)) {&#13;&#10;        e.target.classList.toggle(&#39;active&#39;);&#13;&#10;    }&#13;&#10;});&#60;/code&#62;&#60;/pre&#62;', 3, '2022-11-07 15:03:25', NULL),
(57, 'Instalar laravel', 'formas de instalar lavavel', '&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;//instalar el instalador de laravel&#13;&#10;composer global require laravel/installer&#13;&#10;&#13;&#10;//ahora para instalar laravel ejecutar solo el siguiente comando&#13;&#10;laravel new appname&#13;&#10;laravel new laravel9&#13;&#10;&#13;&#10;//instalar forma tradicional&#13;&#10;composer create-project laravel/laravel nameproject&#13;&#10;&#13;&#10;//codigo de ayuda&#13;&#10;laravel new -h&#13;&#10;&#13;&#10;//si queremos empesar un nuevo laravel con git&#13;&#10;laravel new proyect --git&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:05:38', '2022-12-20 02:05:17'),
(58, 'artisan consola', 'Uso de artisan consola', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;//iniciar servidor&#13;&#10;php artisan serve&#13;&#10;&#13;&#10;// crear controladores - en consola&#13;&#10;php artisan make:controller PostController&#13;&#10;php artisan make:controller PostController -i //crea con el metodo invocable&#13;&#10;php artisan make:controller PostController -r //con 7 los metodos&#13;&#10;php artisan make:controller PostController --api //con 5 metodos&#13;&#10;php artisan make:controller nameFolder\\\\namecontroller&#13;&#10;&#13;&#10;//crear model&#13;&#10;php artisan make:model Post&#13;&#10;&#13;&#10;//crear migraciones&#13;&#10;php artisan make:migration create_posts_table&#13;&#10;&#13;&#10;//si queremos agregar una columna a una tabla sin perder los datos que ya tiene&#13;&#10;//creamo una nueva migracion&#13;&#10;php artisan make:migration add_body_to_posts_table&#13;&#10;&#13;&#10;//crear modelo y su migracion&#13;&#10;php artisan make:model Post -m&#13;&#10;&#13;&#10;//migraciones para crear la tablas en la BD&#13;&#10;//ejecutar las migraciones&#13;&#10;php artisan migrate&#13;&#10;&#13;&#10;//deshacer cambios&#13;&#10;php artisan migrate:rollback //retroce lote por lote&#13;&#10;php artisan migrate:rollback --step=5 //regresa a las 5 anteriores&#13;&#10;php artisan migrate:fresh &#9;//elimina TODO y ejecuta todas las migraciones&#13;&#10;&#13;&#10;//crear un form request, para encapsular las validaciones&#13;&#10;php artisan make:request SavePostRequest&#13;&#10;&#13;&#10;//ver la rutas&#13;&#10;php artisan route:list --path=blog&#13;&#10;&#13;&#10;//crear al mismo tiermpo&#13;&#10;php artisan make:model --migration --controller --factory Post&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:07:09', NULL),
(59, 'Tinker Consola', 'uso del Tinker Consola', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;###tinker para consultar la bd desde la consola //ejecutar php directamente&#13;&#10;php artisan tinker&#13;&#10;//obtener todo&#13;&#10;Post::get()&#13;&#10;//obtener uno&#13;&#10;$post = Post::find(1)&#13;&#10;//Modificar&#13;&#10;$post-&#38;gt;title = &#39;Nuevo titulo&#39;&#13;&#10;$post-&#38;gt;save()&#13;&#10;&#13;&#10;//nuevo registro&#13;&#10;$post = new Post;&#13;&#10;$post-&#38;gt;title = &#39;nuevo titulo&#39;&#13;&#10;$post-&#38;gt;body = &#39;nuevo detalle&#39;&#13;&#10;$post-save()&#13;&#10;$post-&#38;gt;delete()&#13;&#10;&#13;&#10;//salir de tinker&#13;&#10;ctrl+c&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:07:51', NULL),
(60, 'Instalar bootstrap', 'Instalar bootstrap en laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//instalr dependencia de sass&#13;&#10;npm install sass --save-dev&#13;&#10;&#13;&#10;//instalar bootstrap&#13;&#10;npm i bootstrap --save-dev&#13;&#10;&#13;&#10;//desintalar&#13;&#10;npm uninstall bootstrap&#13;&#10;&#13;&#10;//importar en plantilla&#13;&#10;@vite([&#39;resources/css/app.scss&#39;, &#39;resources/js/app.js&#39;])&#13;&#10;&#13;&#10;//resources/css/app.scss&#13;&#10;$body-bg: #222222;&#13;&#10;$primary: #999999;&#13;&#10;@import &#34;bootstrap/scss/bootstrap&#34;;&#13;&#10;&#13;&#10;//resources/js/app.js&#13;&#10;console.log(&#39;Hello World from vite&#39;);&#13;&#10;import &#39;../css/app.scss&#39;;&#13;&#10;import * as bootstrap from &#39;bootstrap&#39;;&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:09:24', NULL),
(61, 'instalar Tailwind', 'instalar Tailwind laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//instalr dependencia de sass&#13;&#10;npm install sass --save-dev&#13;&#10;&#13;&#10;&#13;&#10;//instalar tailwind //https://tailwindcss.com/docs/guides/laravel&#13;&#10;npm install -D tailwindcss postcss autoprefixer&#13;&#10;npx tailwindcss init -p&#13;&#10;&#13;&#10;//instalar plugin tailwind para formulario&#13;&#10;npm i @tailwindcss/forms --save-dev     //si algun error reiniciar run dev&#13;&#10;&#13;&#10;//importar en plantilla&#13;&#10;@vite([&#39;resources/css/app.scss&#39;, &#39;resources/js/app.js&#39;])&#13;&#10;&#13;&#10;//resources/css/app.scss&#13;&#10;@tailwind base;&#13;&#10;@tailwind components;&#13;&#10;@tailwind utilities;&#13;&#10;&#13;&#10;//tailwind.config.js&#13;&#10;content: [&#13;&#10;    &#34;./resources/**/*.blade.php&#34;,&#13;&#10;    &#34;./resources/**/*.js&#34;,&#13;&#10;    // &#34;./resources/**/*.vue&#34;,&#13;&#10;],&#13;&#10;&#13;&#10;plugins: [&#13;&#10;    require(&#39;@tailwindcss/forms&#39;),&#13;&#10;],&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:10:02', NULL),
(62, 'Ejecutar vite NPM', 'Ejecutar vite NPM consola', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;//instalar los paquetes npm de laravel&#13;&#10;npm install&#13;&#10;&#13;&#10;//ejecutar vite&#13;&#10;npm run dev&#13;&#10;&#13;&#10;//para salir&#13;&#10;ctrl + c&#13;&#10;&#13;&#10;//si es para produccion compilar&#13;&#10;npm run build&#13;&#10;&#13;&#10;//composer&#13;&#10;composer -v&#13;&#10;//actualizar&#13;&#10;composer self-update&#13;&#10;&#13;&#10;//node&#13;&#10;node -v&#13;&#10;//actualizar node&#13;&#10;npm install -g npm&#13;&#10;&#13;&#10;//npm&#13;&#10;npm -v&#13;&#10;//actualizar npm&#13;&#10;//https://es.stackoverflow.com/questions/24268/c%C3%B3mo-actualizo-nodejs-en-windows&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:10:47', NULL);
INSERT INTO `codigos` (`id`, `titulo`, `descripcion`, `codigo`, `lenguaje_id`, `created_at`, `updated_at`) VALUES
(63, 'Rutas laravel', 'Rutas laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//routes/web.php&#13;&#10;&#13;&#10;//mostrar listado de posts&#13;&#10;Route::get(&#39;/blog&#39;, [PostController::class, &#39;index&#39;])-&#38;gt;name(&#39;posts.index&#39;);&#13;&#10;&#13;&#10;//para ver formulario de creacion de post&#13;&#10;Route::get(&#39;/blog/create&#39;, [PostController::class, &#39;create&#39;])-&#38;gt;name(&#39;posts.create&#39;);&#13;&#10;//para  guardar el post&#13;&#10;Route::post(&#39;/blog/store&#39;, [PostController::class, &#39;store&#39;])-&#38;gt;name(&#39;posts.store&#39;);&#13;&#10;&#13;&#10;//para mostrar el detalle de casa post o el blog&#13;&#10;Route::get(&#39;/blog/{post}&#39;, [PostController::class, &#39;show&#39;])-&#38;gt;name(&#39;posts.show&#39;);&#13;&#10;&#13;&#10;//para ver form edit&#13;&#10;Route::get(&#39;/blog/edit/{post}&#39;, [PostController::class, &#39;edit&#39;])-&#38;gt;name(&#39;posts.edit&#39;);&#13;&#10;//para  actualizar desde form el post&#13;&#10;Route::patch(&#39;/blog/{post}&#39;, [PostController::class, &#39;update&#39;])-&#38;gt;name(&#39;posts.update&#39;);&#13;&#10;&#13;&#10;//para  eliminar el post&#13;&#10;Route::delete(&#39;/blog/{post}&#39;, [PostController::class, &#39;destroy&#39;])-&#38;gt;name(&#39;posts.destroy&#39;);&#13;&#10;&#13;&#10;//forma resumida de crear una ruta&#13;&#10;Route::resource(&#39;blog&#39;, PostController::class, [&#13;&#10;    &#39;names&#39; =&#38;gt; &#39;posts&#39;, //cambiar nombre de rutas porque quiere tomar el blog&#13;&#10;    &#39;parameters&#39; =&#38;gt; [&#13;&#10;        &#39;blog&#39; =&#38;gt; &#39;post&#39;,&#13;&#10;    ],&#13;&#10;]);&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:11:27', NULL),
(64, 'Controlador laravel', 'Controlador laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;public function index()&#13;&#10;{&#13;&#10;    $posts = Post::get();&#13;&#10;&#13;&#10;    return view(&#39;post.index&#39;, [&#13;&#10;        &#39;posts&#39; =&#38;gt; $posts&#13;&#10;    ]);&#13;&#10;}&#13;&#10;&#13;&#10;public function create()&#13;&#10;{&#13;&#10;    return view(&#39;post.create&#39;, [&#13;&#10;        &#39;post&#39; =&#38;gt; new Post()&#13;&#10;    ]);&#13;&#10;}&#13;&#10;&#13;&#10;public function store(SavePostRequest $request)&#13;&#10;{&#13;&#10;    // Post::create($request-&#38;gt;all()); //no usar si $guarded = [] es vacio&#13;&#10;    Post::create($request-&#38;gt;validated());&#13;&#10;&#13;&#10;    return to_route(&#39;posts.index&#39;)-&#38;gt;with(&#39;status&#39;, &#39;Post creado correctamente&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;public function show(Post $post)&#13;&#10;{&#13;&#10;    // $post = Post::find($post-&#38;gt;id);&#13;&#10;    $post = Post::findOrFail($post-&#38;gt;id); //encuentra o falla (404)&#13;&#10;&#13;&#10;    return view(&#39;post.show&#39;, [&#13;&#10;        &#39;post&#39; =&#38;gt; $post&#13;&#10;    ]);&#13;&#10;}&#13;&#10;&#13;&#10;public function edit(Post $post)&#13;&#10;{&#13;&#10;    return view(&#39;post.edit&#39;, [&#13;&#10;        &#39;post&#39; =&#38;gt; $post&#13;&#10;    ]);&#13;&#10;}&#13;&#10;&#13;&#10;public function update(SavePostRequest $request, Post $post)&#13;&#10;{&#13;&#10;    // $post-&#38;gt;update($request-&#38;gt;all()); //no usar si $guarded = [] es vacio&#13;&#10;    $post-&#38;gt;update($request-&#38;gt;validated());&#13;&#10;&#13;&#10;    return to_route(&#39;posts.show&#39;, $post)-&#38;gt;with(&#39;status&#39;, &#39;Post actualizado correctamente&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;public function destroy(Post $post)&#13;&#10;{&#13;&#10;    $post-&#38;gt;delete();&#13;&#10;    return to_route(&#39;posts.index&#39;)-&#38;gt;with(&#39;status&#39;, &#39;Post eliminado correctamente&#39;);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:12:24', NULL),
(65, 'Motor de plantillas por herencia', 'Motor de plantillas por herencia', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//crear carpeta&#13;&#10;//resources/views/layouts/app.blade.php&#13;&#10;&#38;lt;!DOCTYPE html&#38;gt;&#13;&#10;&#38;lt;html lang=&#34;en&#34;&#38;gt;&#13;&#10;&#38;lt;head&#38;gt;&#13;&#10;    &#38;lt;meta charset=&#34;UTF-8&#34;&#38;gt;&#13;&#10;    &#38;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&#38;gt;&#13;&#10;    &#38;lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&#38;gt;&#13;&#10;    &#38;lt;title&#38;gt;Aprendible - @yield(&#39;title&#39;)&#38;lt;/title&#38;gt;&#13;&#10;    &#38;lt;meta name=&#34;description&#34; content=&#34;@yield(&#39;meta-description&#39;, &#39;default meta description&#39;)&#34;&#38;gt;&#13;&#10;&#38;lt;/head&#38;gt;&#13;&#10;&#38;lt;body&#38;gt;&#13;&#10;    @include(&#39;partials.navigation&#39;)&#13;&#10;&#13;&#10;    {{-- aqui se imprime el contenido --}}&#13;&#10;    @yield(&#39;content&#39;) &#13;&#10;&#38;lt;/body&#38;gt;&#13;&#10;&#38;lt;/html&#38;gt;&#13;&#10;&#13;&#10;//resources/views/partials/navigation.blade.php&#13;&#10;&#38;lt;nav&#38;gt;&#13;&#10;    &#38;lt;ul&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;home&#39;) }}&#34;&#38;gt;Home&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;blog&#39;) }}&#34;&#38;gt;Blog&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;about&#39;) }}&#34;&#38;gt;Contacto&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;contact&#39;) }}&#34;&#38;gt;About&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;    &#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/nav&#38;gt;&#13;&#10;&#13;&#10;#####################&#13;&#10;//resources/views/about.blade.php&#13;&#10;@extends(&#39;layouts.app&#39;)&#13;&#10;@section(&#39;title&#39;, &#39;About&#39;)&#13;&#10;@section(&#39;meta-description&#39;, &#39;About meta description&#39;)&#13;&#10;&#13;&#10;@section(&#39;content&#39;)&#13;&#10;    &#38;lt;h1&#38;gt;Abaout&#38;lt;/h1&#38;gt;&#13;&#10;@endsection&#13;&#10;&#13;&#10;//resources/views/welcome.blade.php&#13;&#10;{{-- traer el layaut o plantilla --}}&#13;&#10;@extends(&#39;layouts.app&#39;)&#13;&#10;@section(&#39;title&#39;, &#39;Bienvenido&#39;)&#13;&#10;@section(&#39;meta-description&#39;, &#39;home meta description&#39;)&#13;&#10;&#13;&#10;@section(&#39;content&#39;)&#13;&#10;    &#38;lt;h1&#38;gt;Home&#38;lt;/h1&#38;gt;&#13;&#10;@endsection&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:13:38', NULL),
(66, 'Motor de plantillas por componentes', 'Motor de plantillas por componentes', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//resources/views/components/layouts/app.blade.php&#13;&#10;&#38;lt;!DOCTYPE html&#38;gt;&#13;&#10;&#38;lt;html lang=&#34;en&#34;&#38;gt;&#13;&#10;&#38;lt;head&#38;gt;&#13;&#10;    &#38;lt;meta charset=&#34;UTF-8&#34;&#38;gt;&#13;&#10;    &#38;lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&#38;gt;&#13;&#10;    &#38;lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&#38;gt;&#13;&#10;    &#38;lt;title&#38;gt;Aprendible - {{ $title ?? &#39;&#39; }}&#38;lt;/title&#38;gt;&#13;&#10;    &#38;lt;meta name=&#34;description&#34; content=&#34;{{ $metadescription ?? &#39;default meta description&#39; }}&#34;&#38;gt;&#13;&#10;&#38;lt;/head&#38;gt;&#13;&#10;&#38;lt;body&#38;gt;&#13;&#10;    {{-- @include(&#39;partials.navigation&#39;) --}}&#13;&#10;    &#38;lt;x-layouts.navigation /&#38;gt;&#13;&#10;&#13;&#10;    {{-- aqui se imprime el contenido --}}&#13;&#10;    {{-- @yield(&#39;content&#39;) es quivalente a $slot --}}&#13;&#10;    {{ $slot }}&#13;&#10;&#38;lt;/body&#38;gt;&#13;&#10;&#38;lt;/html&#38;gt;&#13;&#10;&#13;&#10;//resources/views/components/layouts/navigation.blade.php&#13;&#10;&#38;lt;nav&#38;gt;&#13;&#10;    &#38;lt;ul&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;home&#39;) }}&#34;&#38;gt;Home&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;blog&#39;) }}&#34;&#38;gt;Blog&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;about&#39;) }}&#34;&#38;gt;Contacto&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;        &#38;lt;li&#38;gt;&#38;lt;a href=&#34;{{ route(&#39;contact&#39;) }}&#34;&#38;gt;About&#38;lt;/a&#38;gt;&#38;lt;/li&#38;gt;&#13;&#10;    &#38;lt;/ul&#38;gt;&#13;&#10;&#38;lt;/nav&#38;gt;&#13;&#10;&#13;&#10;################&#13;&#10;//resources/views/welcome.blade.php&#13;&#10;{{-- &#34;x&#34; hace referencia a la carpeta components --}}&#13;&#10;&#38;lt;x-layouts.app title=&#34;home&#34; meta-Description=&#34;home meta description&#34;&#38;gt;&#13;&#10;    &#38;lt;h1&#38;gt;home&#38;lt;/h1&#38;gt;&#13;&#10;&#38;lt;/x-layouts.app&#38;gt;&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:14:21', NULL),
(67, 'migraciones laravel', 'generar las migraciones laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//database/migrations/2022_08_30_022956_create_posts_table.php&#13;&#10;&#13;&#10;//para crear la tabla&#13;&#10;public function up()&#13;&#10;{&#13;&#10;    Schema::create(&#39;posts&#39;, function (Blueprint $table) {&#13;&#10;        $table-&#38;gt;id();&#13;&#10;        $table-&#38;gt;string(&#39;title&#39;);&#13;&#10;        $table-&#38;gt;timestamps();&#13;&#10;    });&#13;&#10;}&#13;&#10;&#13;&#10;//para eliminar la tabla&#13;&#10;public function down()&#13;&#10;{&#13;&#10;    Schema::dropIfExists(&#39;posts&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;//database/migrations/2022_08_30_023418_add_body_to_posts_table.php&#13;&#10;&#13;&#10;//agregar un columana a la tabla&#13;&#10;public function up()&#13;&#10;{&#13;&#10;    Schema::table(&#39;posts&#39;, function (Blueprint $table) {&#13;&#10;        $table-&#38;gt;LongText(&#39;body&#39;)-&#38;gt;after(&#39;title&#39;);&#13;&#10;    });&#13;&#10;}&#13;&#10;&#13;&#10;//eliminar una columna de la tabla&#13;&#10;public function down()&#13;&#10;{&#13;&#10;    Schema::table(&#39;posts&#39;, function (Blueprint $table) {&#13;&#10;        $table-&#38;gt;dropColumn(&#39;body&#39;);&#13;&#10;    });&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:15:27', NULL),
(68, 'sesiones flash laravel', 'sesiones flash en laravel', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//el algun metodo del controlador&#13;&#10;&#13;&#10;session()-&#38;gt;flas(&#39;status&#39;, &#39;Post creado correctamente&#39;);&#13;&#10;&#13;&#10;//otra forma&#13;&#10;return to_route(&#39;posts.index&#39;)-&#38;gt;with(&#39;status&#39;, &#39;Post creado correctamente&#39;);&#13;&#10;&#13;&#10;##############&#13;&#10;//en la vista que se quiere ver&#13;&#10;@if(session(&#39;status&#39;))&#13;&#10;    &#38;lt;div class=&#34;&#34;&#38;gt;&#13;&#10;        {{ session(&#39;status&#39;) }}&#13;&#10;    &#38;lt;/div&#38;gt;&#13;&#10;@endif&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:16:24', NULL),
(69, 'Formularios y validaciones', 'Formularios y validaciones', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//en metodo del cotrolador&#13;&#10;&#13;&#10;$request-&#38;gt;validate([&#13;&#10;    &#39;title&#39; =&#38;gt; &#39;required|min:3&#39;,&#13;&#10;    &#39;body&#39; =&#38;gt; &#39;required|min:3&#39;&#13;&#10;]);&#13;&#10;&#13;&#10;//en la vista&#13;&#10;&#13;&#10;&#38;lt;input type=&#34;text&#34; name=&#34;title&#34; value=&#34;{{ old(&#39;title&#39;, $post-&#38;gt;title) }}&#34; &#38;gt;;&#13;&#10;@error(&#39;title&#39;)&#13;&#10;&#9;&#38;lt;p&#38;gt;{{ $message }}&#38;lt;/p&#38;gt;&#13;&#10;@enderror&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:17:00', NULL),
(70, 'Middleware', 'Middleware', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//forma 1&#13;&#10;//para que funcione necesita una ruta login&#13;&#10;Route::view(&#39;/about&#39;, &#39;about&#39;)-&#38;gt;name(&#39;about&#39;)-&#38;gt;middleware(&#39;auth&#39;); &#13;&#10;&#13;&#10;Route::get(&#39;/login&#39;, function () {&#13;&#10;    return &#39;login page&#39;;&#13;&#10;})-&#38;gt;name(&#39;login&#39;);&#13;&#10;&#13;&#10;//forma 2&#13;&#10;//en el controlador&#13;&#10;public function __construct()&#13;&#10;{&#13;&#10;    //enviamos a los metodos a proteger&#13;&#10;    $this-&#38;gt;middleware(&#39;auth&#39;, [&#39;only&#39; =&#38;gt; [&#39;create&#39;, &#39;edit&#39;, &#39;store&#39;, &#39;update&#39;, &#39;destroy&#39;]]);&#13;&#10;&#13;&#10;    //metodos que no se protegen&#13;&#10;    $this-&#38;gt;middleware(&#39;auth&#39;, [&#39;except&#39; =&#38;gt; [&#39;index&#39;, &#39;show&#39;]]);&#13;&#10;&#13;&#10;    //otra forma de proteger&#13;&#10;    $this-&#38;gt;middleware(&#39;auth&#39;)-&#38;gt;except([&#39;index&#39;, &#39;show&#39;]);&#13;&#10;}&#13;&#10;&#13;&#10;//no olvidar que necesita la ruta login&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:17:32', NULL),
(71, 'Ocultar si no tiene session', 'Ocultar si no tiene session', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;@auth&#13;&#10;    &#38;lt;a class=&#34;&#34; href=&#34;{{ route(&#39;posts.create&#39;) }}&#34;&#38;gt;Create new post&#38;lt;/a&#38;gt;&#13;&#10;@endauth&#13;&#10;&#13;&#10;@auth&#13;&#10;    &#38;lt;a class=&#34;&#34; href=&#34;{{ route(&#39;posts.create&#39;) }}&#34;&#38;gt;NO ver&#38;lt;/a&#38;gt;&#13;&#10;@endauth&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:18:18', NULL),
(72, 'Ruta y formulario', 'Ruta y formulario', '&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;//ruta que recive el formulario crear&#13;&#10;Route::post(&#39;/blog/store&#39;, [PostController::class, &#39;store&#39;])-&#38;gt;name(&#39;posts.store&#39;);&#13;&#10;//formulario para crear&#13;&#10;&#38;lt;form  action=&#34;{{ route(&#39;posts.store&#39;) }}&#34; method=&#34;POST&#34; &#38;gt;&#13;&#10;@csrf&#13;&#10;//metodo del controlador&#13;&#10;public function store(Request $request){}&#13;&#10;&#13;&#10;//ruta que recive del formulario para editar&#13;&#10;Route::patch(&#39;/blog/{post}&#39;, [PostController::class, &#39;update&#39;])-&#38;gt;name(&#39;posts.update&#39;);&#13;&#10;//formulario para editar&#13;&#10;&#38;lt;form  action=&#34;{{ route(&#39;posts.update&#39;, $post) }}&#34; method=&#34;POST&#34; &#38;gt;&#13;&#10;@csrf @method(&#39;PATCH&#39;)&#13;&#10;//metodo del controlador&#13;&#10;public function update(Request $request, Post $post){}&#13;&#10;&#13;&#10;#################&#13;&#10;//ruta que recive el formulario para eliminar&#13;&#10;Route::delete(&#39;/blog/{post}&#39;, [PostController::class, &#39;destroy&#39;])-&#38;gt;name(&#39;posts.destroy&#39;);&#13;&#10;//formulario para eliminar&#13;&#10;&#38;lt;form  action=&#34;{{ route(&#39;posts.destroy&#39;, $post) }}&#34; method=&#34;POST&#34; &#38;gt;&#13;&#10;@csrf @method(&#39;DELETE&#39;)&#13;&#10;//metodo del controlador&#13;&#10;public function destroy(Post $post){}&#60;/code&#62;&#60;/pre&#62;', 5, '2022-11-07 15:19:07', NULL),
(73, 'centrar css', 'centrar elementos con css', '&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;div class=&#34;container&#34;&#38;gt;&#13;&#10;&#9;&#38;lt;img src=&#34;goku.png&#34; class=&#34;img&#34;&#38;gt;&#13;&#10;&#38;lt;/div&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 1&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;position:&#9;relative;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;&#9;&#13;&#10;&#9;position: absolute;&#13;&#10;&#9;inset: 0;&#13;&#10;&#9;margin: auto;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 2&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;position:&#9;relative;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;&#9;&#13;&#10;&#9;position: absolute;&#13;&#10;&#9;left: 50%;&#13;&#10;&#9;top: 50%;&#13;&#10;&#9;transform: translate(-50%, -50%);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 3&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;display: grid;&#13;&#10;&#9;place-items: center;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 4&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;display: grid;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;&#9;&#13;&#10;&#9;place-self: center;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 5&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;display: grid;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;&#9;&#13;&#10;&#9;margin: auto;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 6&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;display: flex;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;&#9;&#13;&#10;&#9;margin: auto;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 7&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;&#38;nbsp;.container{&#13;&#10;&#9;padding: 1em;&#13;&#10;&#9;width: 80%;&#13;&#10;&#9;height: 300px;&#13;&#10;&#9;border: 5px solid;&#13;&#10;&#9;&#13;&#10;&#9;display: flex;&#13;&#10;&#9;align-items: center;&#13;&#10;&#9;justify-content: center;&#13;&#10;}&#13;&#10;&#13;&#10;.img{&#13;&#10;&#9;border:2px solid #fff;&#13;&#10;&#9;width:200px;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 6, '2022-11-07 19:09:57', NULL),
(74, 'ver ramas git', 'ver ramas de git, cambiar el nombre de la rama, reestablecer los cambio realizado', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git branch&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;cambiar nombre de rama&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git branc -m master main&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;reestablecer los cambio realizado&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git checkout --.&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-15 23:53:25', NULL),
(75, 'configuracion global git', 'entrar a configuracion global de git y modificar, comando simplificado', '&#60;p&#62;entrar al archivo de config global&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git config --global -e&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;si modifica el archivo (esc) y comando guardar y salir&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;para solo salir&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;:q!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;===========&#60;/p&#62;&#60;p&#62;con esto cambiamos de forma global la creacion de ramas con el nombre main&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git config --global init.defaultBranch main&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-15 23:59:47', '2022-12-16 00:06:08'),
(76, 'configuracion inicial de git', 'cuando instala git configuracion inicial', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git config --global user.name &#34;Carlos Tucno&#34;&#13;&#10;git config --global user.email &#34;catuva@gmail.com&#34; &#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 00:04:30', NULL),
(77, 'alias para git', 'comando para git simplificado', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git status --short&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;crear nuestro propio comando gi&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git config --global alias.s &#34;status --short&#34;&#13;&#10;&#13;&#10;git s&#60;/code&#62;&#60;/pre&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git log --oneline&#13;&#10;git log --oneline --decorate --all --graph&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;comando de fernando herrera&#60;/p&#62;&#60;p&#62;&#60;a href=&#34;https://gist.github.com/Klerith/0acf18bbece7923bcac55edb71b03c2b&#34;&#62;https://gist.github.com/Klerith/0acf18bbece7923bcac55edb71b03c2b&#60;/a&#62;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git config --global alias.lg &#34;log --graph --abbrev-commit --decorate --format=format:&#39;%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)&#39; --all&#34;&#13;&#10;&#13;&#10;git lg&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;otra alternativa&#60;/p&#62;&#60;p&#62;&#60;a href=&#34;https://gist.github.com/soRodriguezz/fbf591f1316cb9d3947c4c1be68d4148&#34;&#62;https://gist.github.com/soRodriguezz/fbf591f1316cb9d3947c4c1be68d4148&#60;/a&#62;&#60;/p&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-16 00:20:21', '2022-12-16 00:22:12'),
(78, 'diff staged git', 'ver diferencia cuando solo esta guardado en memoria (staged)', '&#60;p&#62;cuando no esta en commit y pero ya realizaste git add . (esta en memoria) y realizaste cambios sin almacenar a memoria&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git diff&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;si ya realizaste cambios y aplicaste git add . en varias ocaciones sin realizar el commit&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git diff --staged&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 00:31:22', NULL),
(79, 'corregir el ultimo commit y anteriores', 'corregir el nombre del ultimo commit ', '&#60;p&#62;cambiar el ultimo titulo del commit&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git commit --amend -m &#34;Nuevo titulo&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;si desea cambiar el ultimo titulo entrando al archivo de configuracion solamente&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git commit --amend&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;para guardar los cambios precione &#60;strong&#62;esc &#60;/strong&#62;luego&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;AGREGAR CAMBIOS A UN ARCHIVO QUE TIENE YA UN &#38;nbsp;COMMIT (Viajes en el tiempo)&#60;/p&#62;&#60;p&#62;(si ya tiene el archivo modificado y en staged sin commit o deseas sacar sacar el commit al staged y modificar y cambiar)&#60;/p&#62;&#60;p&#62;el &#60;strong&#62;HEAD&#60;/strong&#62; apunta al ultimo commit y el &#60;a href=&#34;https://www.codigosysignos.com/ascii/potencia&#34;&#62;&#60;strong&#62;(^)&#60;/strong&#62;&#60;/a&#62;&#60;strong&#62; &#60;/strong&#62;al penultimo commit&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --soft HEAD^&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;luego pasan al staged (memoria) y se tiene que aplicar un commit nuevo&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git add .&#13;&#10;git commit -m &#34;otro titulo&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;se puede colocar numero &#60;a href=&#34;https://www.codigosysignos.com/ascii/potencia&#34;&#62;&#60;strong&#62;(^number)&#60;/strong&#62;&#60;/a&#62;&#60;strong&#62; &#60;/strong&#62;hasta el archivo del commit que quiere modificar&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --soft HEAD^3&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;Haciendo uso del Hash&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --soft 12347Cd&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 11:24:35', '2022-12-16 11:47:40'),
(80, 'commit mas simplificado', 'realizar un commit simplificado', '&#60;p&#62;normal&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git add .&#13;&#10;git commit -m &#34;titulo&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;simplificado&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git commit -am &#34;titulo&#34;&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 11:34:27', NULL),
(81, 'volver a un commit especifico', 'volver o regresar a un commit especifico', '&#60;p&#62;volver a un commit especifico sin destruir los arhivos que tubieron cambios para volver a hacer cambios y guardar&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --mixed db215d&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;volver a un commit especifico y borrar todos los commit posteriores a el&#38;nbsp;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --hard e848b5&#13;&#10;git push --force&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ver todos los cambios realizados cronologicamente de los commit que desaparecieron y modificaciones&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reflog&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;si se desa volver a un commit que fue eliminado&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git reset --hard e848b5&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 12:27:31', NULL),
(82, 'modificar el nombre del archivo', 'cambiar el nombre del archivo que tiene commit', '&#60;p&#62;al plicar esto pasa al staged (memoria)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git mv adios.js hoja.js&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;eliminar el archivo pasa al staged (memoria)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git rm hoja.js&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;y luego aplicar un commit&#60;/p&#62;', 8, '2022-12-16 12:46:36', NULL),
(83, 'ramas en git', 'crear, unir ramas en git y soluciones de problemas', '&#60;p&#62;&#60;strong&#62;crear rama &#60;/strong&#62;nueva (-b) redirige a la nueva rama&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git checkout NuevaRama&#13;&#10;git checkout -b NuevaRama&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;cambiarce a otra rama&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git checkout NombreRama&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;VER RAMAS&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git branch&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#60;strong&#62;UNIR RAMAS&#60;/strong&#62;&#60;/p&#62;&#60;p&#62;para unir ramas, debo estar en la rama que recibe los cambios de otra rama.&#60;/p&#62;&#60;p&#62;CASOS QUE PASA AL UNIR&#60;/p&#62;&#60;ol&#62;&#60;li&#62;si la rama que recive los commit (ejemplo: master) no ha tenido cambios despues de haber creado la otra rama que ya tiene varios commits - la union no genera problemas, es como si todo fuera en una sola rama. &#60;strong&#62;(Fast-forward)&#60;/strong&#62; excelente&#60;/li&#62;&#60;li&#62;si la rama que recive los commit (ejemplo: master) tiene commits posteriores a la rama otra rama, pero son diferentes en diferentes arhivos - la union no genera problemas&#60;/li&#62;&#60;li&#62;si la rama que recive los commit (ejemplo: master) tiene commits posteriores a la rama otra rama y son modificaciones en le mismo archivo - posiblemente genere conflico el cual se debe soluciona manualmente.&#60;/li&#62;&#60;/ol&#62;&#60;p&#62;merge (inir ramas)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git merge NombreDeLaOtraRama&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;en el caso 2 (se habre la ventana para colocar el nombre de commit de la union) y para guardar&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;en el caso 3 (buscar el archivo y corregir y hacer un commit)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#38;lt;&#38;lt;&#38;lt;&#38;lt;&#38;lt;&#38;lt;HEAD es de la rama principal&#13;&#10;&#13;&#10;======&#13;&#10;&#13;&#10;&#38;gt;&#38;gt;&#38;gt;&#38;gt;&#38;gt;&#38;gt;&#38;gt; NombreDeOtraRama&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;&#60;p&#62;ELIMINAR RAMA (tiene que estar en una rama que no se sera eliminada)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git branch -d NombreDeLaOtraRama&#13;&#10;git branch -d NombreDeLaOtraRama -f //forzar eliminado&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 13:34:28', '2022-12-16 13:35:24'),
(84, 'tags - etiquetas version', 'tags etiquetas referencias a un commit version', '&#60;p&#62;son una referecia a un commit especifico es como colocar a una version de una aplicacion finalizado&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git tag v1.0.0&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;para ver los tag creados&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git tag&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;para eliminar un tag&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git tag -d v1.0.0&#60;/code&#62;&#60;/pre&#62;&#60;h3&#62;&#60;strong&#62;version semantico&#60;/strong&#62;&#60;/h3&#62;&#60;p&#62;&#60;strong&#62;v1&#60;/strong&#62;[este es la version]&#60;strong&#62;.0&#60;/strong&#62;[agregaron alguna funcionalidad]&#60;strong&#62;.0&#60;/strong&#62;[corrigieron algun bug]&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git tag -a v1.0.0 -m &#34;version 1.0.0 lista&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;agregar un tag a un commit anterior&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git tag -a v0.1.0 sdf12sdf -m &#34;version 1.0.0 lista&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ver mas informacion sobre un tag especifico&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git show v0.1.0&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 13:50:41', NULL),
(85, 'stash git bobeda', 'guardar en bobeda no son commit ', '&#60;p&#62;&#60;strong&#62;stash&#60;/strong&#62;: es cuando las modificaciones de archivos esta en staged (memoria) y no tiene commit &#38;nbsp;pero deseas deplegar el proyecto entonces si no queremos realizar commit porque puede causar conflicto se guarda en una boveda.&#60;/p&#62;&#60;p&#62;sugerencia no guardas mas de 3 porque se nos olvida&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;lo guarda y desaparece los cambios realizado al los archivos que no tienen commit pero esta grabado&#60;/p&#62;&#60;p&#62;listar los stahs el stash@{0} es ultimo que se añadio&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash list&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;recuperar el ultimo stash y pasar al staged y lo elimina de la lista del stash&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash pop&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;verificar si tiene conflictos y corregir, luego hacer un commit&#60;/p&#62;&#60;p&#62;recuperar un stash especifico y pasar al staged&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash apply stash@{2}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;elimininar todos los stash&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash clear&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;eliminar stash especifico de la lista&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash drop stash@{0}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;GUARDAR EN BOVEDA CON NOMBRE&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git stash save &#34;titulo o nombre&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-16 14:26:05', NULL),
(86, 'rebase unir commit', 'cambiar los commit de posicion, cambiar los titulos de commits, unir separar', '&#60;p&#62;rebase sirve para sacar los commits a una memoria y pasar adelante o en caso de ramas, la otra rama cambia de posision de un commint donde se separo a otra para tomar una nueva partida.(como si recien se ha creado) - DE preferencia solo en local y no hacer push&#60;/p&#62;&#60;p&#62;usos:&#60;/p&#62;&#60;ul&#62;&#60;li&#62;ordenar commits&#60;/li&#62;&#60;li&#62;corregir mensaje de los commits&#60;/li&#62;&#60;li&#62;unir commits&#60;/li&#62;&#60;li&#62;separar commits&#60;/li&#62;&#60;/ul&#62;&#60;p&#62;estar en la rama secundaria , al hacer rebase los commit que tenga la rama master pasan a a la rama secundaria, y sus commits pasan al final.&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git rebase master&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;traer los ultimos 4&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git rebase -i HEAD~4&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#60;strong&#62;unir commits,&#60;/strong&#62;&#38;nbsp;&#60;/p&#62;&#60;p&#62;sale una ventana de los cuatro ultimos commit si deseo unir un commit con su anterior cambiar &#60;strong&#62;pick &#60;/strong&#62;por &#60;strong&#62;s &#60;/strong&#62;solo al commit que se unira con la anterior, son tres commits solo camcbiar a dos sus pick, luego cerrar con los cambios&#60;/p&#62;&#60;p&#62;&#60;strong&#62;cambiar los titulos de los commit,&#60;/strong&#62;&#38;nbsp;&#60;/p&#62;&#60;p&#62;sale una ventana de los cuatro ultimos commit si deseo cambiar titulo del commit, cambiar &#60;strong&#62;pick &#60;/strong&#62;por r&#60;strong&#62; &#60;/strong&#62;solo al commit que se modificara luego se abrea la ventanas para modificar los cambios&#60;/p&#62;&#60;p&#62;para grabar cambios, las veces que sea necesarios (para escribir precional la tecla a)&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;otra ventana para registrar el nombre del commit&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#60;strong&#62;separa commits,&#60;/strong&#62;&#38;nbsp;&#60;/p&#62;&#60;p&#62;sale una ventana de los cuatro ultimos commit si deseo separa un commit,cambiar &#60;strong&#62;pick &#60;/strong&#62;por &#60;strong&#62;edit&#38;nbsp;&#60;/strong&#62; luego cerrar con los cambios&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;:wq!&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;luego se va a la ventana de comandos, para ello si se realiza un git status (el mensaje es que rebase progresivo),&#38;nbsp;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git reset HEAD^&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ahora se pasa al staged(memoria) y ahora si se puede hacer commits independiente a los arhivos que esta en staged&#60;/p&#62;&#60;p&#62;una ves terminado y realizado los commit, cerrar el rebase con&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git rebase --continue&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-16 15:16:21', NULL),
(87, 'push, pull, inicio de github', 'enviar los commits, obtener commit del repositorio', '&#60;p&#62;PUSH (para subir los cambios a github)&#60;/p&#62;&#60;p&#62;PULL (para obtener los cambios de github)&#60;/p&#62;&#60;p&#62;======&#60;/p&#62;&#60;p&#62;si ya empezaste un git local y luego crear un repositorio en github aplicar estos comandos:&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git remote add origin https://github.com/......&#13;&#10;git push -u origin master&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;revisar las fuentes remotas en nuestro repositorio local&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git remote -v&#13;&#10;//veremos&#13;&#10;origin &#13;&#10;dashboard  https://github.com/tucno21/dashboard_for_framework.git (push) //donde obtengo algunos commits&#13;&#10;origin  https://github.com/tucno21/mini_framework_mvc_php.git (fetch)&#13;&#10;origin  https://github.com/tucno21/mini_framework_mvc_php.git (push) //mi codigo y envio los cambios&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;analizamos&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git push -u origin master&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#60;strong&#62;push&#60;/strong&#62;: para enviar los commits&#60;/p&#62;&#60;p&#62;&#60;strong&#62;origin&#60;/strong&#62;: nombre del repositior remoto (github)&#60;/p&#62;&#60;p&#62;&#60;strong&#62;master&#60;/strong&#62;: nombre de la rama de repositorio remoto (github)&#60;/p&#62;&#60;p&#62;&#60;strong&#62;-u:&#60;/strong&#62; nos auda a que la proxima vez enviar los commits al repositior solo sea de esta forma&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git push&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 15:44:54', NULL),
(88, 'enviar las tag a github', 'enviar los tag a github', '&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git push --tags&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 8, '2022-12-16 15:54:42', NULL),
(89, 'git pull', 'obtener los commits de repositorio remoto ontener ramas remotas', '&#60;p&#62;obtener los commit del repositorio remoto que modifico otro usuario y lo aplica al repositorio local&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git pull&#13;&#10;git pull origin main //nombre del repo remoto y su rama&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;siempre sale un aviso al realizar este comando por el cual se puede configurar como se aplicara el git pull&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git config pull.ff only        //cambios directos fast-forward only&#13;&#10;git config pull.rebase true    //rebase&#13;&#10;git config pull.rebase false   //merge(the default strategy)&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;el mas usado es:&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git config --global pull.ff only &#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ERRORES&#60;/p&#62;&#60;p&#62;si al realizar git pull no se puede por que existe errores, se debe cambiar la forma del pull de manera local&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git config pull.rebase true&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ahora en el repositorio de manera local se debe de corregir, realizar nuevo cambios, y luego salir de &#60;strong&#62;rebase&#60;/strong&#62;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git rebase --continue&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ahora actualizar en el repositio remoto&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git push&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 16:07:17', '2022-12-16 16:22:57'),
(90, 'git fech', 'fech', '&#60;p&#62;git fetch: sirve para trarer todo los cambio del repositio remoto pero no afecta a nuestro repositior local, queda almacenado en memoria de git&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git fetch&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;si deseo que los cambios esten en el repositio local&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git pull&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-16 18:15:00', NULL),
(91, 'inicio con typescript', 'inicio con typescript', '&#60;p&#62;se puede usar extenciones typescript&#60;/p&#62;&#60;p&#62;&#60;strong&#62;TypeScript Importer&#60;/strong&#62;&#60;/p&#62;&#60;p&#62;instalar de forma global&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;npm install -g typescript&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;para ver la version que tenemos&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;tsc --version&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;crear un archivo “app.ts”&#60;/p&#62;&#60;p&#62;ahora se puede compilar a formato *.js&#34;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;tsc app&#13;&#10;tsc app.ts&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;generar TSCconfig.json&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;tsc --init&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;luego abrir el archivo creado “tsconfig.json&#34; no modificar&#60;/p&#62;&#60;p&#62;luego para compilar varios archivos typescript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;tsc&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;esto genera una parabra en el archivo js (&#34;use strict&#34;)&#60;/p&#62;&#60;p&#62;codigo para no estar compilando a cada momento&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;tsc --watch&#13;&#10;tsc -w&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 9, '2022-12-16 20:12:15', NULL),
(92, 'tipo de datos', 'tipos de datos para javascript', '&#60;p&#62;datos primitivos&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;let a:number = 10; //dato tipo numerico&#13;&#10;let b:string = &#34;Hello&#34;; // dato tipo string&#13;&#10;let c:boolean = true; // dato tipo booleano&#13;&#10;let d:any = 10; // dato tipo generico&#13;&#10;&#13;&#10;//funcion anonima autoejecutable&#13;&#10;(()=&#38;gt;{&#13;&#10;    let z:number = 12;&#13;&#10;})();&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 9, '2022-12-16 21:05:24', NULL),
(93, 'dato tipo scrind', 'tipo de dato string', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;const batman:string = &#39;Bruce Wayne&#39;;&#13;&#10;const superman:string = &#39;Clark Kent&#39;;&#13;&#10;const flash:string = &#39;Barry Allen&#39;;&#13;&#10;&#13;&#10;&#13;&#10;console.log(`yo soy ${batman}`);&#13;&#10;&#13;&#10;console.log(batman.toUpperCase()); // BRUCE WAYNE&#13;&#10;&#13;&#10;//buscar letra del string en la posicion 4&#13;&#10;console.log(batman[4]); // e&#13;&#10;console.log(batman[15]); // undefined&#13;&#10;&#13;&#10;//con la &#34;?&#34; se valida si existe el valor en la posicion 16&#13;&#10;// y si existe lo convierte a mayuscula&#13;&#10;console.log(batman[16]?.toUpperCase()); // undefined&#13;&#10;&#13;&#10;//se puede usar con cualquier metodo o condicinal&#13;&#10;console.log(batman[16]?.toUpperCase() || &#34;no esta batman&#34;); // no esta batman&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:06:07', NULL),
(94, 'dato tipo any', 'dato tipo any', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//dato de dato any&#13;&#10;let dato: any = 1; // es cualquier tipo de dato&#13;&#10;&#13;&#10;dato = &#34;hola&#34;; // ahora es string&#13;&#10;&#13;&#10;console.log(dato.charAt(0)); // ahora es string&#13;&#10;&#13;&#10;dato = 150.2345; // ahora es number&#13;&#10;&#13;&#10;console.log(dato.toFixed(2)); // ahora es number&#13;&#10;&#13;&#10;//casteo de datos&#13;&#10;// el casteo sirve para decirle al compilador que tipo de dato es&#13;&#10;&#13;&#10;dato = &#34;nuevo hola&#34;; // ahora es string&#13;&#10;console.log((&#38;lt;string&#38;gt;dato).charAt(0)); // ahora es string&#13;&#10;console.log((dato as string).charAt(0)); // ahora es string&#13;&#10;&#13;&#10;dato = 150.2345; // ahora es number&#13;&#10;console.log((&#38;lt;number&#38;gt;dato).toFixed(2)); // ahora es number&#13;&#10;console.log((dato as number).toFixed(2)); // ahora es number&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:17:24', NULL),
(95, 'array ', 'configurar array en typescript', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;const arregoNumeros: number[] = [1, 2, 3, 4, 5];&#13;&#10;const arregloNumeros2: Array&#38;lt;number&#38;gt; = [1, 2, 3, 4, 5];&#13;&#10;&#13;&#10;const arregloLetras: string[] = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;];&#13;&#10;const arregloLetras2: Array&#38;lt;string&#38;gt; = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;];&#13;&#10;&#13;&#10;const arregloVarios: (number | string)[] = [1, &#39;a&#39;, 2, &#39;b&#39;, 3, &#39;c&#39;, 4, &#39;d&#39;, 5, &#39;e&#39;];&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:23:09', NULL),
(96, 'Tuples', 'definir tipo de datos de un arrego', '&#60;p&#62;sirve para&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//Tuples&#13;&#10;// sirve para definir tipo de dato tendra cada posicion y el numero de posiciones de un arreglo&#13;&#10;let arrego: [string, number];&#13;&#10;&#13;&#10;arrego = [&#34;hola&#34;, 1];&#13;&#10;&#13;&#10;arrego = [&#34;hola&#34;, 1 , true]; // error&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:27:48', NULL),
(97, 'enum ', 'enum  solo de typescript', '&#60;p&#62;sirve para crear objeto el cual define constantes fijas&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//enum&#13;&#10;// sirve para definir un conjunto de constantes&#13;&#10;enum AudioLevel {&#13;&#10;    Min, // 0&#13;&#10;    Medium, // 1&#13;&#10;    Max // 2&#13;&#10;}&#13;&#10;&#13;&#10;let currentLevel = AudioLevel.Medium; // obtiene el valor de la constante&#13;&#10;let currentLevel2 = AudioLevel[1];  // obtiene el nombre de la constante&#13;&#10;let currentLevel3:AudioLevel = AudioLevel.Min;  // obtiene valor de la constante&#13;&#10;&#13;&#10;console.log(currentLevel); // 1&#13;&#10;console.log(currentLevel2); // Medium&#13;&#10;&#13;&#10;enum Color {&#13;&#10;    Rojo = &#34;Rojo&#34;, // rojo = 0&#13;&#10;    Verde = &#34;Verde&#34;, // verde = 1&#13;&#10;    Azul = &#34;Azul&#34;, // azul = 2&#13;&#10;}&#13;&#10;&#13;&#10;let colorFavorito: Color = Color.Rojo; // 0&#13;&#10;console.log(`Mi color favorito es ${colorFavorito}`); // Mi color favorito es Rojo&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:42:00', NULL),
(98, 'void', 'sirve para indicar que no retorna nada', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//void&#13;&#10;// sirve para indicar que no retorna nada&#13;&#10;function callBatman():void {&#13;&#10;    // return 1; // error de compilacion&#13;&#10;    return;&#13;&#10;}&#13;&#10;//en funcion flecha&#13;&#10;const callBatman2 = ():void =&#38;gt; {&#13;&#10;    return;&#13;&#10;}&#13;&#10;&#13;&#10;const a = callBatman();&#13;&#10;console.log(a); // undefined&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 21:50:41', NULL),
(99, 'never', 'nunca va a retornar un valor', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//never&#13;&#10;// sirve para indicar que una funcion nunca va a retornar un valor y ademas que nunca va a terminar su ejecucion y no deja que se ejecute el resto del codigo&#13;&#10;&#13;&#10;const abc = (): never =&#38;gt; {&#13;&#10;    throw new Error(&#39;Error&#39;);&#13;&#10;}&#13;&#10;&#13;&#10;abc(); // Error&#13;&#10;&#13;&#10;console.log(&#39;Hola mundo&#39;); // no se ejecuta&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;otra forma&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//error personalizado&#13;&#10;const error = (message: string): never =&#38;gt; {&#13;&#10;    throw new Error(message);&#13;&#10;}&#13;&#10;&#13;&#10;error(&#39;Error critico...&#39;);&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 22:01:36', NULL),
(100, 'funciones', 'establecer tipo de retorno de una funcion y que parametro recibe', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//funciones que retorna string&#13;&#10;function getNombre():string {&#13;&#10;    return &#34;Fernando&#34;;&#13;&#10;}&#13;&#10;&#13;&#10;//funcion flecha que retorna string&#13;&#10;const getApellido = ():string =&#38;gt; {&#13;&#10;    return &#34;Herrera&#34;;&#13;&#10;}&#13;&#10;&#13;&#10;//funcion flecha que retorna un string o un numero&#13;&#10;const getNombreCompleto = ():string | number =&#38;gt; {&#13;&#10;    return &#34;Fernando Herrera&#34;;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;funcion con parametro&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//funcion con parametros&#13;&#10;const getNombreCompleto2 = (nombre:string, apellido:string):string =&#38;gt; {&#13;&#10;    return nombre + &#34; &#34; + apellido;&#13;&#10;}&#13;&#10;getNombreCompleto2(&#34;Fernando&#34;, &#34;Herrera&#34;); //Fernando Herrera&#13;&#10;&#13;&#10;//funcion con parametros opcionales&#13;&#10;const getNombreCompleto3 = (nombre:string, apellido?:string):string =&#38;gt; {&#13;&#10;    if(apellido){&#13;&#10;        return nombre + &#34; &#34; + apellido;&#13;&#10;    }else{&#13;&#10;        return nombre;&#13;&#10;    }&#13;&#10;}&#13;&#10;getNombreCompleto3(&#34;Fernando&#34;); //Fernando&#13;&#10;&#13;&#10;//funcion con parametros por defecto&#13;&#10;const getNombreCompleto4 = (nombre:string, apellido:string = &#34;Herrera&#34;):string =&#38;gt; {&#13;&#10;    return nombre + &#34; &#34; + apellido;&#13;&#10;}&#13;&#10;getNombreCompleto4(&#34;Fernando&#34;); //Fernando Herrera&#13;&#10;&#13;&#10;//funcion con parametros rest&#13;&#10;const getNombreCompleto5 = (nombre:string, ...restoDeNombres:string[]):string =&#38;gt; {&#13;&#10;    return nombre + &#34; &#34; + restoDeNombres.join(&#34; &#34;);&#13;&#10;}&#13;&#10;getNombreCompleto5(&#34;Fernando&#34;, &#34;Antonio&#34;, &#34;Herrera&#34;, &#34;Perez&#34;); //Fernando Antonio Herrera Perez&#13;&#10;&#13;&#10;&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 22:09:09', '2022-12-16 22:15:52');
INSERT INTO `codigos` (`id`, `titulo`, `descripcion`, `codigo`, `lenguaje_id`, `created_at`, `updated_at`) VALUES
(101, 'definir una funcion', 'definir una funcion sin estructurar', '&#60;p&#62;con esto definimos como sera una variable en una funcion&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;let myFunction; // es una variable de tipo any&#13;&#10;let myFunction2:Function; // es una variable de tipo Function&#13;&#10;let myFunction3:(a:number, b:number) =&#38;gt; number; // es una variable de tipo Function que recibe dos parametros de tipo number y retorna un numero&#13;&#10;&#13;&#10;//estructurar la funcion&#13;&#10;myFunction3 = (a:number, b:number) =&#38;gt; a+b;&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 22:31:00', NULL),
(102, 'objetos', 'efinir las propiedades de un objeto y plantilla interfas', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//objetos&#13;&#10;// definir las propiedades de un objeto&#13;&#10;let superman: {nombre:string, apellido:string, poder?:string} = {&#13;&#10;    nombre: &#34;Clark&#34;,&#13;&#10;    apellido: &#34;Kent&#34;,&#13;&#10;    poder: &#34;Super Fuerza&#34;&#13;&#10;}&#13;&#10;&#13;&#10;superman = {    &#13;&#10;    nombre: &#34;Bruce&#34;,&#13;&#10;    apellido: &#34;Wayne&#34;,&#13;&#10;    // poder: &#34;Dinero&#34;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;otro&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;// definir las propiedades de un objeto&#13;&#10;let superman: {nombre:string, apellido:string, poder?:string, getName?:()=&#38;gt;string} = {&#13;&#10;    nombre: &#34;Clark&#34;,&#13;&#10;    apellido: &#34;Kent&#34;,&#13;&#10;    poder: &#34;Super Fuerza&#34;,&#13;&#10;    // getName(){}&#13;&#10;}&#13;&#10;&#13;&#10;superman = {    &#13;&#10;    nombre: &#34;Bruce&#34;,&#13;&#10;    apellido: &#34;Wayne&#34;,&#13;&#10;    // poder: &#34;Dinero&#34;&#13;&#10;    getName(){&#13;&#10;        return `${this.nombre} ${this.apellido}`;&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;objeto como plantilla&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//tipos personalizados&#13;&#10;// son para definir un tipo de dato que no es nativo de typescript&#13;&#10;// type es una palabra reservada de typescript&#13;&#10;type Heroe = {&#13;&#10;    nombre:string, &#13;&#10;    apellido:string, &#13;&#10;    poder?:string[], &#13;&#10;    getName?:()=&#38;gt;string&#13;&#10;};&#13;&#10;&#13;&#10;//esto sirve para que los objetos que se creen a partir de esta interfaz cumplan con los requisitos que se le piden&#13;&#10;let superman: Heroe = {&#13;&#10;    nombre: &#34;Clark&#34;,&#13;&#10;    apellido: &#34;Kent&#34;,&#13;&#10;    poder: [&#34;Super Fuerza&#34;, &#34;Volar&#34;, &#34;Super velocidad&#34;],&#13;&#10;    // getName(){}&#13;&#10;}&#13;&#10;&#13;&#10;let batman: Heroe = {&#13;&#10;    nombre: &#34;Bruce&#34;,&#13;&#10;    apellido: &#34;Wayne&#34;,&#13;&#10;    poder: [&#34;Dinero&#34;, &#34;Inteligencia&#34;, &#34;Super tecnología&#34;],&#13;&#10;    getName(){ &#13;&#10;        return `${this.nombre} ${this.apellido}`;&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;definir varios tipos en variable&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//tipos personalizados&#13;&#10;type Heroe = {&#13;&#10;    nombre:string, &#13;&#10;    edad:number, &#13;&#10;};&#13;&#10;&#13;&#10;// definir que una variable puede ser de varios tipos&#13;&#10;let myCustomVariable:(string|number|Heroe) = &#39;fernando&#39;; //permite ser de tipo string, number o Heroe&#13;&#10;console.log(typeof myCustomVariable); //string&#13;&#10;myCustomVariable = 10;&#13;&#10;console.log(typeof myCustomVariable); //number&#13;&#10;myCustomVariable = {&#13;&#10;    nombre:&#39;spiderman&#39;,&#13;&#10;    edad:30,&#13;&#10;};&#13;&#10;console.log(typeof myCustomVariable); //object&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-16 22:57:15', NULL),
(103, 'depuracion de typescript', 'depurar el codigo typescript y cambios a tsconfig.json', '&#60;p&#62;es buscar en que linea del arcchivo typescritp esta el error o el console log para ello se debe abrirt el archivo &#60;strong&#62;“tsconfig.json” &#60;/strong&#62;y buscar y activar&#38;nbsp;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#34;sourceMap&#34;: true,&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;esto genera un archivo map de js&#60;/p&#62;&#60;p&#62;ELIMINAR LOS COMENTARIOS que esta en javascript que esta en typescript activar&#38;nbsp;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#34;removeComments&#34;: true,&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;evitar que typescript entre alguna carpetas que no queremos que interprete agregar&#38;nbsp;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#34;exclude&#34;:[&#13;&#10;&#9;&#34;node_module&#34;,&#13;&#10;&#9;&#34;otro&#34;&#13;&#10;]&#13;&#10;//si solo deseo compilar algunas carpetas&#13;&#10;&#34;include&#34;:[&#13;&#10;&#9;&#34;si_compila&#34;,&#13;&#10;]&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;juntar unir todos los archivos compilados de typescrippt buscar y activar&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#34;outFile&#34;:&#34;./&#34;  //donde se almacena&#13;&#10;&#34;outFile&#34;:&#34;./main.js&#34;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;modo estricto para crear clases, biene desactivo, activar y colocar en false&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62; &#34;strictPropertyInitialization&#34;: false,  &#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 9, '2022-12-16 23:06:35', '2022-12-17 11:15:44'),
(104, 'destructuracion', 'destructutracion de objetos', '&#60;p&#62;DESTRUCTURACION DE OBJETOS&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//destructuracion de objetos&#13;&#10;&#13;&#10;type Avenger = {&#13;&#10;    iroman: string,&#13;&#10;    spiderman: string,&#13;&#10;    vision: string,&#13;&#10;    activo: boolean,&#13;&#10;    poder: number&#13;&#10;}&#13;&#10;&#13;&#10;const avenger:Avenger = {&#13;&#10;    iroman: &#39;Tony&#39;,&#13;&#10;    spiderman: &#39;Peter&#39;,&#13;&#10;    vision: &#39;Vision&#39;,&#13;&#10;    activo: true,&#13;&#10;    poder: 1500&#13;&#10;}&#13;&#10;&#13;&#10;const printAvenger = ({iroman, spiderman, vision, activo, poder}:Avenger) =&#38;gt; {&#13;&#10;    console.log(iroman, spiderman, vision, activo, poder);&#13;&#10;}&#13;&#10;&#13;&#10;printAvenger(avenger); //Tony Peter Vision true 1500&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;haciendo uso de rest&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//haciendo uso de rest&#13;&#10;const printAvenger2 = ({iroman, ...resto}:Avenger) =&#38;gt; {&#13;&#10;    console.log(iroman, resto);&#13;&#10;}&#13;&#10;&#13;&#10;printAvenger2(avenger); //Tony {spiderman: &#34;Peter&#34;, vision: &#34;Vision&#34;, activo: true, poder: 1500}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;DESTRUCTURACION DE ARREGLOS&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//destructuracion de arreglos&#13;&#10;const avengers:string[] = [&#34;Thor&#34;,&#34;Steve&#34;,&#34;Tony&#34;];&#13;&#10;&#13;&#10;const [thor,capi,ironman] = avengers;&#13;&#10;&#13;&#10;console.log(thor,capi,ironman); //Thor Steve Tony&#13;&#10;&#13;&#10;//ignorando el primer elemento&#13;&#10;const [, ,ironman2] = avengers;&#13;&#10;&#13;&#10;console.log(ironman2); //Tony&#13;&#10;&#13;&#10;//arreglo con tuplas&#13;&#10;const avengers2:[string,boolean,number] = [&#34;Thor&#34;,false,45];&#13;&#10;&#13;&#10;const [thor2,capi2,ironman3] = avengers2;&#13;&#10;&#13;&#10;console.log(thor2,capi2,ironman3); //Thor false 45&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 10:51:03', NULL),
(105, 'ciclos', 'ciclos for of', '&#60;p&#62;formar objetos luego guardar en un arrego&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;type Avenger = {&#13;&#10;    name: string;&#13;&#10;    age: number;&#13;&#10;};&#13;&#10;&#13;&#10;const iroman: Avenger= {&#13;&#10;    name: &#39;Iroman&#39;,&#13;&#10;    age: 20&#13;&#10;};&#13;&#10;&#13;&#10;const thor: Avenger = {&#13;&#10;    name: &#39;Thor&#39;,&#13;&#10;    age: 30&#13;&#10;};&#13;&#10;&#13;&#10;const spiderman: Avenger = {&#13;&#10;    name: &#39;Spiderman&#39;,&#13;&#10;    age: 40&#13;&#10;};&#13;&#10;&#13;&#10;const avengers: Avenger[] = [iroman, thor, spiderman];&#13;&#10;&#13;&#10;&#13;&#10;for (const avenger of avengers) {&#13;&#10;    console.log(avenger.name);&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 11:00:51', '2022-12-20 02:09:59'),
(106, 'clase', 'forma de definer las clases propiedades', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;class Avenger {&#13;&#10;    private name: string;&#13;&#10;    public team: string;&#13;&#10;    public realName?: string;&#13;&#10;    static avgAge: number = 35;&#13;&#10;&#13;&#10;    constructor(name: string, team: string, realName?: string) {&#13;&#10;        this.name = name;&#13;&#10;        this.team = team;&#13;&#10;        this.realName = realName;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;const antman: Avenger = new Avenger( &#39;Antman&#39;, &#39;Cap&#39;, &#39;Scott Lang&#39; );&#13;&#10;&#13;&#10;console.log(antman); // Avenger { name: &#39;Antman&#39;, team: &#39;Cap&#39;, realName: &#39;Scott Lang&#39; }&#13;&#10;//acceder a una propiedad static&#13;&#10;console.log(Avenger.avgAge); // 35&#13;&#10;&#13;&#10;//forma corta de asignar propiedades&#13;&#10;class Avenger2 {&#13;&#10;    static avgAge: number = 35;&#13;&#10;    constructor(&#13;&#10;        private name: string,&#13;&#10;        public team: string,&#13;&#10;        public realName?: string&#13;&#10;        ) {}&#13;&#10;}&#13;&#10;&#13;&#10;const iroman: Avenger2 = new Avenger2( &#39;Ironman&#39;, &#39;Cap&#39;, &#39;Tony Stark&#39; );&#13;&#10;&#13;&#10;console.log(iroman); // Avenger2 { name: &#39;Ironman&#39;, team: &#39;Cap&#39;, realName: &#39;Tony Stark&#39; }&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 11:36:16', NULL),
(107, 'clases metodos', 'clases definir los metodos', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;class Avenger {&#13;&#10;    static avgAge: number = 35;&#13;&#10;    constructor(&#13;&#10;        private name: string,&#13;&#10;        public team: string,&#13;&#10;        public realName?: string&#13;&#10;        ) {}&#13;&#10;&#13;&#10;    static getAvgAge() {&#13;&#10;        return Avenger.avgAge;&#13;&#10;    }&#13;&#10;&#13;&#10;    private getAge() {&#13;&#10;        return Avenger.avgAge;&#13;&#10;    }&#13;&#10;&#13;&#10;    public getFullName() {&#13;&#10;        return `${ this.name } ${ this.realName }`;&#13;&#10;    }&#13;&#10;&#13;&#10;    public getEdad() {&#13;&#10;        //access to private method&#13;&#10;        return this.getAge();&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;const iroman: Avenger = new Avenger( &#39;Ironman&#39;, &#39;Cap&#39;, &#39;Tony Stark&#39; );&#13;&#10;&#13;&#10;console.log( iroman.getFullName() );&#13;&#10;console.log( iroman.getEdad() );&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 11:53:09', NULL),
(108, 'herencia de clases', 'forma de definir las herencias en las clases', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//clases herencia&#13;&#10;class Avenger {&#13;&#10;    constructor(&#13;&#10;        private nombre:string,&#13;&#10;        public equipo:string,&#13;&#10;        public nombreReal:string,&#13;&#10;    ){&#13;&#10;        console.log(&#34;constructor avenger llamado&#34;);&#13;&#10;    }&#13;&#10;&#13;&#10;    private getNombreCompleto():string{&#13;&#10;        return this.nombre + &#34; &#34; + this.nombreReal;&#13;&#10;    }&#13;&#10;&#13;&#10;    protected getNombreCompletoProtected():string{&#13;&#10;        return this.nombre + &#34; &#34; + this.nombreReal;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;class Xmen extends Avenger{&#13;&#10;    constructor(&#13;&#10;        nombre:string, // no es necesario poner public o private&#13;&#10;        equipo:string, // no es necesario poner public o private&#13;&#10;        nombreReal:string, // no es necesario poner public o private&#13;&#10;        public poder:string&#13;&#10;    ){&#13;&#10;        super(nombre,equipo,nombreReal);&#13;&#10;        console.log(&#34;constructor xmen llamado&#34;);&#13;&#10;    }&#13;&#10;&#13;&#10;    public getNombreCompletoDeXmen():string{&#13;&#10;        return this.getNombreCompletoProtected() + &#34; &#34; + this.poder;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;const wolwerine = new Xmen(&#34;Wolverine&#34;,&#34;Xmen&#34;,&#34;carlos&#34;, &#34;Regeneracion&#34;);&#13;&#10;console.log(wolwerine);&#13;&#10;console.log(wolwerine.getNombreCompletoDeXmen());&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 12:14:40', NULL),
(109, 'get y set de clases', 'get y set', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//clases herencia&#13;&#10;class Avenger {&#13;&#10;    constructor(&#13;&#10;        protected nombre:string,&#13;&#10;        public equipo:string,&#13;&#10;        public nombreReal:string,&#13;&#10;    ){&#13;&#10;        console.log(&#34;constructor avenger llamado&#34;);&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;class Xmen extends Avenger{&#13;&#10;    constructor(&#13;&#10;        nombre:string, // no es necesario poner public o private&#13;&#10;        equipo:string, // no es necesario poner public o private&#13;&#10;        nombreReal:string, // no es necesario poner public o private&#13;&#10;        public poder:string&#13;&#10;    ){&#13;&#10;        super(nombre,equipo,nombreReal);&#13;&#10;        console.log(&#34;constructor xmen llamado&#34;);&#13;&#10;    }&#13;&#10;&#13;&#10;    //get&#13;&#10;    get getNombre():string{&#13;&#10;        return this.nombre;&#13;&#10;    }&#13;&#10;&#13;&#10;    //set&#13;&#10;    set setNombre(nombre:string){&#13;&#10;        if(nombre.length &#38;lt;= 3){&#13;&#10;            throw new Error(&#34;El nombre debe ser mayor a 3 caracteres&#34;);&#13;&#10;        }&#13;&#10;        this.nombre = nombre;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;const wolwerine = new Xmen(&#34;Wolverine&#34;,&#34;Xmen&#34;,&#34;carlos&#34;, &#34;Regeneracion&#34;);&#13;&#10;&#13;&#10;console.log(wolwerine.getNombre);&#13;&#10;wolwerine.setNombre = &#34;Logan&#34;;&#13;&#10;console.log(wolwerine.getNombre);&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 12:25:12', NULL),
(110, 'clases abstractas', 'definicion de las clases abstractas', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//clases abstractas son clases que no se pueden instanciar&#13;&#10;abstract class Mutante {&#13;&#10;  constructor(public nombre: string, public edad:number) {}&#13;&#10;}&#13;&#10;&#13;&#10;class Xmen extends Mutante {&#13;&#10;//   constructor(nombre: string, edad:number) {&#13;&#10;//     super(nombre, edad);&#13;&#10;//   }&#13;&#10;    public salvarMundo() {&#13;&#10;        return &#39;El mundo esta salvado&#39;;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;class Villano extends Mutante {&#13;&#10;    public planMundial() {&#13;&#10;        return &#39;El mundo esta perdido&#39;;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;const wolverine = new Xmen(&#39;Wolverine&#39;, 60);&#13;&#10;console.log(wolverine);&#13;&#10;&#13;&#10;const magneto = new Villano(&#39;Magneto&#39;, 60);&#13;&#10;console.log(magneto);&#13;&#10;&#13;&#10;const printName = (parametro: Mutante) =&#38;gt; {&#13;&#10;    console.log(parametro.nombre);&#13;&#10;}&#13;&#10;&#13;&#10;printName(wolverine);&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 12:42:04', NULL),
(111, 'constructor privado', 'definir un constructor privado', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//constructor private&#13;&#10;//es un patron de diseño singleton&#13;&#10;//sirve para que no se puedan crear mas instancias de la clase&#13;&#10;// el patron singleton es poco usado&#13;&#10;&#13;&#10;class Apocalipsis {&#13;&#10;    static instancia: Apocalipsis; //propiedad estatica&#13;&#10;   private constructor( public nombre: string ) {} //solo se puede instanciar una vez&#13;&#10;&#13;&#10;    static llamarApocalipsis(): Apocalipsis {&#13;&#10;        if( !Apocalipsis.instancia ) {&#13;&#10;            Apocalipsis.instancia = new Apocalipsis(&#39;Soy Apocalipsis&#39;);&#13;&#10;        }&#13;&#10;        return Apocalipsis.instancia;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;// const apocalipsis = new Apocalipsis(&#39;Soy Apocalipsis&#39;);&#13;&#10;&#13;&#10;// console.log(apocalipsis.nombre); //Soy Apocalipsis&#13;&#10;&#13;&#10;let real = Apocalipsis.llamarApocalipsis();&#13;&#10;console.log(real); //Apocalipsis { nombre: &#39;Soy Apocalipsis&#39; }&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 12:52:17', NULL),
(112, 'interfaces', 'diseño de interfaces en objetos', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//interface es similar un type pero se puede extender&#13;&#10;&#13;&#10;interface Client {&#13;&#10;    name: string;&#13;&#10;    age: number;&#13;&#10;    address: Address; //interface dentro de otra interface&#13;&#10;    //metodos&#13;&#10;    getFullAddress(id:string): string;&#13;&#10;}&#13;&#10;//cuando la interface principal tiene mas de un nivel, es mejor crear una interface por cada nivel&#13;&#10;interface Address {&#13;&#10;    street: string;&#13;&#10;    city: string;&#13;&#10;}&#13;&#10;&#13;&#10;const client: Client = {&#13;&#10;    name: &#39;Juan&#39;,&#13;&#10;    age: 32,&#13;&#10;    address: { //el orden no importa si se usa la misma clave&#13;&#10;        city: &#39;Bogota&#39;,&#13;&#10;        street: &#39;Calle falsa 123&#39;,&#13;&#10;    },&#13;&#10;    //metodos&#13;&#10;    getFullAddress(id:string): string {&#13;&#10;        return this.address.street + &#39; &#39; + this.address.city;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;console.log(client.getFullAddress(&#39;hola&#39;));&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 13:22:44', NULL),
(113, 'interface en clases', 'diseño de interfaces en en clases', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//interface es similar un type pero se puede extender&#13;&#10;&#13;&#10;interface Xmen {&#13;&#10;    nombre: string;&#13;&#10;    edad: number;&#13;&#10;    mutantPower(id:number): string;&#13;&#10;}&#13;&#10;&#13;&#10;interface Human {&#13;&#10;    age: number;&#13;&#10;}&#13;&#10;&#13;&#10;class Mutant implements Xmen, Human {&#13;&#10;    nombre: string;&#13;&#10;    edad: number;&#13;&#10;    age: number;&#13;&#10;    mutantPower(id:number): string {&#13;&#10;        return &#39;Power&#39;;&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 13:29:07', NULL),
(114, 'interface funciones', 'diseño de interfaces para funciones', '&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//interface&#13;&#10;&#13;&#10;interface addTwoNumbers {&#13;&#10;    (a: number, b: number): number;&#13;&#10;}&#13;&#10;&#13;&#10;//function&#13;&#10;let addTwoNumbers: addTwoNumbers;&#13;&#10;&#13;&#10;addTwoNumbers = (a: number, b: number) =&#38;gt; {&#13;&#10;    return a + b;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 13:33:11', NULL),
(115, 'namespace', 'namespace', '&#60;p&#62;no se usa mucho, son las bases que se contruyen las librerias y los framework como reac&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-typescript&#34;&#62;//namespace&#13;&#10;&#13;&#10;namespace Validations {&#13;&#10;    //para dar uso de las funciones se debe agregar &#34;export&#34; antes de la funcion&#13;&#10;    export const validateText = (text: string):boolean =&#38;gt; {&#13;&#10;        // if (text.length &#38;gt; 3) {&#13;&#10;        //     return true;&#13;&#10;        // }&#13;&#10;        // return false;&#13;&#10;&#13;&#10;        //ternary operator&#13;&#10;        return text.length &#38;gt; 3 ? true : false;&#13;&#10;    }&#13;&#10;&#13;&#10;    export const validateNumber = (num: number):boolean =&#38;gt; {&#13;&#10;        return num &#38;gt; 0 ? true : false;&#13;&#10;    }&#13;&#10;&#13;&#10;    export const validateDate = (myDate: Date):boolean =&#38;gt; {&#13;&#10;        //instanceof sirve para saber si un objeto es de un tipo determinado&#13;&#10;        return myDate instanceof Date ? true : false;&#13;&#10;    }&#13;&#10;}&#13;&#10;&#13;&#10;console.log(Validations.validateText(&#39;Hola&#39;));&#13;&#10;console.log(Validations.validateNumber(10));&#13;&#10;console.log(Validations.validateDate(new Date()));&#60;/code&#62;&#60;/pre&#62;', 9, '2022-12-17 13:50:26', NULL),
(116, 'evita usar SWITCH if', 'evitar usar if anidados demasiado', '&#60;p&#62;ejemplo en caso de usa if&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const adversario = &#34;Iron-Man&#34;;&#13;&#10;let loki = &#34;&#34;;&#13;&#10;&#13;&#10;if (adversario === &#34;Iron-Man&#34;) {&#13;&#10;  loki = &#34;Magneto&#34;;&#13;&#10;} else if (adversario === &#34;Hulk&#34;) {&#13;&#10;  loki = &#34;Thanos&#34;;&#13;&#10;} else if (adversario === &#34;Thor&#34;) {&#13;&#10;  loki = &#34;Odin&#34;;&#13;&#10;} else {&#13;&#10;  loki = &#34;Loki&#34;;&#13;&#10;}&#13;&#10;&#13;&#10;console.log(loki); // Magneto&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ejemplo en caso de usar &#60;i&#62;switch&#60;/i&#62;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const adversario = &#34;Iron-Man&#34;;&#13;&#10;let loki = &#34;&#34;;&#13;&#10;&#13;&#10;switch (adversario) {&#13;&#10;  case &#34;Iron-Man&#34;:&#13;&#10;    loki = &#34;Magneto&#34;;&#13;&#10;    break;&#13;&#10;  case &#34;Hulk&#34;:&#13;&#10;    loki = &#34;Thanos&#34;;&#13;&#10;    break;&#13;&#10;  case &#34;Thor&#34;:&#13;&#10;    loki = &#34;Odin&#34;;&#13;&#10;    break;&#13;&#10;  default:&#13;&#10;    loki = &#34;Loki&#34;;&#13;&#10;}&#13;&#10;&#13;&#10;console.log(loki); // Magneto&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;en mejor codigo&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;const adversario = &#34;Iron-Man&#34;;&#13;&#10;let loki = &#34;&#34;;&#13;&#10;&#13;&#10;const LOKI_DISFRACES = {&#13;&#10;  &#34;Iron-Man&#34;: &#34;Magneto&#34;,&#13;&#10;  Hulk: &#34;Thanos&#34;,&#13;&#10;  Thor: &#34;Odin&#34;,&#13;&#10;};&#13;&#10;&#13;&#10;const LOKI_DEFAULT_DISFRAZ = &#34;Loki&#34;;&#13;&#10;&#13;&#10;loki = LOKI_DISFRACES[adversario] || LOKI_DEFAULT_DISFRAZ;&#13;&#10;&#13;&#10;console.log(loki); // Magneto&#60;/code&#62;&#60;/pre&#62;', 3, '2022-12-19 02:42:45', NULL),
(117, 'clonar git y sus ramas', 'clonar git y sus ramas formas', '&#60;p&#62;forma 1&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git clone ----------&#13;&#10;git branch -a  //ver ramas remotas&#13;&#10;git fetch --all  //traer todas las ramas&#13;&#10;git checkout miltonbs52&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 2&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git clone ----------&#13;&#10;git branch -a  //ver ramas remotas&#13;&#10;git checkout miltonbs52  //causa error&#13;&#10;git fetch     /// ya trae la rama y localiza en ella&#13;&#10;git branch   //ver las ramas&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;forma 3&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git clone ----------&#13;&#10;git fetch&#13;&#10;git checkout --track -b pie-stable origin/pie-stable&#13;&#10;Y con esto otro la rama foo.&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-19 23:50:14', NULL),
(118, 'clonar commits', 'clonar commit de otro repositorio', '&#60;pre&#62;&#60;code class=&#34;language-plaintext&#34;&#62;git remote add evirarebase https://github.com/EviraKernel/EviraRebase.git&#13;&#10;git fetch evirarebase&#13;&#10;#copiar commit&#13;&#10;git cherry-pick 2f58b9ca20019f6305a108bd5fa99a67e6463b2b&#13;&#10;// clonar varios commits&#13;&#10;git cherry-pick 5cebcf0799b0c036597a5eee4ce3b96b40f48ef2^..2d8e4f40de57438b0d57c3f05e7fa0d6a1245781&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-19 23:52:20', NULL),
(119, 'volver commit anterior', 'volver a un commit anterior', '&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git reset --hard e848b59bfc57a94a9655b31bf1126d910b34f7d4&#13;&#10;git push --force&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-19 23:53:30', NULL),
(120, 'elimianar rama', 'elimiar rama git', '&#60;p&#62;local&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git branch -D test2&#13;&#10;git branch -d test2&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;remoto&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;git push origin --delete test2&#13;&#10;tucno21&#13;&#10;catuva21&#60;/code&#62;&#60;/pre&#62;', 8, '2022-12-19 23:55:39', NULL),
(121, 'comparar texto', 'comparar  texto lenguajes', '&#60;p&#62;javascript&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;function updateName() {&#13;&#10;  let name = prompt(&#39;Enter a new name&#39;);&#13;&#10;  para.textContent = &#39;Player 1: &#39; + name;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;html&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-html&#34;&#62;&#38;lt;!DOCTYPE html&#38;gt;&#13;&#10;&#38;lt;html&#38;gt;&#13;&#10;  &#38;lt;head&#38;gt;&#13;&#10;    &#38;lt;meta charset=&#34;utf-8&#34;&#38;gt;&#13;&#10;    &#38;lt;title&#38;gt;Mi pagina de prueba&#38;lt;/title&#38;gt;&#13;&#10;  &#38;lt;/head&#38;gt;&#13;&#10;  &#38;lt;body&#38;gt;&#13;&#10;    &#38;lt;img src=&#34;images/firefox-icon.png&#34; alt=&#34;Mi imagen de prueba&#34;&#38;gt;&#13;&#10;  &#38;lt;/body&#38;gt;&#13;&#10;&#38;lt;/html&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;css&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;h1 {&#13;&#10;font-size: 36px;&#13;&#10;color: #000;&#13;&#10;font-family: &#39;Open Sans&#39;;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;php&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-php&#34;&#62;  public function listatypescript()&#13;&#10;    {&#13;&#10;        $codigos = Codigos::lista(&#39;typescript&#39;);&#13;&#10;        if (is_object($codigos)) {&#13;&#10;            $codigos = [$codigos];&#13;&#10;        }&#13;&#10;        echo json_encode($codigos);&#13;&#10;        exit;&#13;&#10;    }&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;java&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-java&#34;&#62;//Constructor de la clase que pide los parámetros necesarios&#13;&#10;    public Deposito (float valor_diametro, float valor_altura, String valor_idDeposito) {&#13;&#10;        if (valor_diametro &#38;gt; 0 &#38;amp;&#38;amp; valor_altura &#38;gt; 0) {            &#13;&#10;            diametro = valor_diametro;&#13;&#10;            altura = valor_altura;&#13;&#10;            idDeposito = valor_idDeposito;&#13;&#10;        } else {&#13;&#10;            diametro = 10;&#13;&#10;            altura = 5;&#13;&#10;            idDeposito = &#34;000&#34;;&#13;&#10;            System.out.println (&#34;Creado depósito con valores por defecto diametro 10 metros altura 5 metros id 000&#34; );&#13;&#10;        }   } //Cierre del constructor&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;python&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-python&#34;&#62;### Introducir un numero por teclado y decir si es par o impar&#13;&#10;num = int(input(&#39;Introduzca un numero: &#39;))&#13;&#10;ifnum % 2 == 0:&#13;&#10;print(&#39;Par&#39;)&#13;&#10;else:&#13;&#10;print(&#39;Impar&#39;)&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;csharp c#&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-csharp&#34;&#62;using System;&#13;&#10;&#13;&#10;class Hello&#13;&#10;{&#13;&#10;    static void Main()&#13;&#10;    {&#13;&#10;        Console.WriteLine(&#34;Hello, World&#34;);&#13;&#10;    }&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;c&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-c&#34;&#62;#include  &#13;&#10;&#13;&#10;int main()&#13;&#10;&#13;&#10;{&#13;&#10;    printf(&#34;Hola Mundo&#34;);  // línea sencilla de comentarios&#13;&#10;    return 0;&#13;&#10;/* &#13;&#10;línea &#13;&#10;    múltiple de&#13;&#10;    comentarios&#13;&#10;*/&#13;&#10;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;c++&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-cpp&#34;&#62;#include&#38;lt;iostream&#38;gt;&#13;&#10;using namespace std;&#13;&#10;int main()&#13;&#10;{&#13;&#10;    int a=0,b=0,p=0,i=0;&#13;&#10;    cout&#38;lt;&#38;lt;&#34;ingrese un numero: &#34;;cin&#38;gt;&#38;gt;a;&#13;&#10;    cout&#38;lt;&#38;lt;&#34;ingrese otro numero: &#34;;cin&#38;gt;&#38;gt;b;&#13;&#10;    while(a&#38;lt;=b)&#13;&#10;    {&#13;&#10;        if(a%2==0)&#13;&#10;        {p=p+a; a=a+1;}&#13;&#10;        else&#13;&#10;        {i=i+a; a=a+1;}&#13;&#10;    }&#13;&#10;    cout&#38;lt;&#38;lt;&#34;suma de pares: &#34;&#38;lt;&#38;lt;p&#38;lt;&#38;lt;endl;&#13;&#10;    cout&#38;lt;&#38;lt;&#34;suma de impares: &#34;&#38;lt;&#38;lt;i&#38;lt;&#38;lt;endl;&#13;&#10;    cin.ignore(); return 0;&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;ruby&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-ruby&#34;&#62;a = Array.new  + [12345]  #  Array  agregado.&#13;&#10;b = String.new + &#39;hello&#39;  #  String agregado.&#13;&#10;c = Time.new&#13;&#10;&#13;&#10;puts &#39;a = &#39;+a.to_s&#13;&#10;puts &#39;b = &#39;+b.to_s&#13;&#10;puts &#39;c = &#39;+c.to_s&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;go&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-go&#34;&#62;package main&#13;&#10;import &#34;fmt&#34;&#13;&#10;func main() {&#13;&#10;  fmt.Println(&#34;Hola Mundo&#34;)&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;swift&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-swift&#34;&#62;let primera = &#34;cadena\\u{E9}?&#34;&#13;&#10;let segunda = &#34;cadena\\u{65}\\u{301}?&#34;&#13;&#10;if primera == segunda {&#13;&#10;print ( &#34;las dos son consideradas igual&#34; )&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;kotlin&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-kotlin&#34;&#62;val myArray2 = arrayOf&#38;lt;int&#38;gt;(10, 20, 30)&#38;lt;/int&#38;gt;&#13;&#10;val myArray3 = booleanArrayOf(true, true, false)&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;sql&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-sql&#34;&#62;SELECT Codigo, Nombre, Apellido1, Apellido2, Telefono, Direccion, Ciudad, Pais&#13;&#10;FROM Personas&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;bash&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;sampleFunction () {&#13;&#10;mkdir -p $1&#13;&#10;cd $1&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;json&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-json&#34;&#62;{&#13;&#10;  &#34;llave1&#34;: &#34;valor1&#34;,&#13;&#10;  &#34;llave2&#34;: &#34;valor2&#34;,&#13;&#10;  &#34;llave3&#34;: &#34;valor3&#34;,&#13;&#10;  &#34;llave4&#34;: 7,&#13;&#10;  &#34;llave5&#34;: null,&#13;&#10;  &#34;favAmigos&#34;: [&#34;Kolade&#34;, &#34;Nithya&#34;, &#34;Dammy&#34;, &#34;Jack&#34;],&#13;&#10;  &#34;favJugadores&#34;: {&#34;uno&#34;: &#34;Kante&#34;, &#34;dos&#34;: &#34;Hazard&#34;, &#34;tres&#34;: &#34;Didier&#34;}&#13;&#10;}&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;xml&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-xml&#34;&#62;&#38;lt;message&#38;gt;&#13;&#10;    &#38;lt;warning&#38;gt;&#13;&#10;         Hola, mundo&#13;&#10;    &#38;lt;/warning&#38;gt;&#13;&#10;&#38;lt;/message&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;yaml&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-yaml&#34;&#62;---&#13;&#10; # An employee record name: Martin D&#39;vloper &#13;&#10;job: Developer &#13;&#10;skill: Elite &#13;&#10;employed: True &#13;&#10;foods: &#13;&#10;- Apple &#13;&#10;- Orange &#13;&#10;- Strawberry &#13;&#10;- Mango &#13;&#10;languages:&#13;&#10; perl: Elite&#13;&#10; python: Elite&#13;&#10; pascal: Lame &#13;&#10;education: |&#13;&#10; 4 GCSEs&#13;&#10; 3 A-Levels&#13;&#10; BSc in the Internet of Things &#60;/code&#62;&#60;/pre&#62;&#60;p&#62;console&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;$ git commit -m &#34;modal xl&#34;&#60;/code&#62;&#60;/pre&#62;', 4, '2022-12-20 00:56:05', '2022-12-20 01:49:34'),
(122, 'inicio react', 'instalar react', '&#60;p&#62;codigo&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;npm init vite@latest&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;luego registrar el nombre del proiyecto y luego seleccionar react&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62; cd citas-react&#13;&#10;  npm install&#13;&#10;  npm run dev&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 10, '2022-12-28 20:13:26', NULL),
(123, 'fracmento y javascript dentro del html', 'fracmento en react y javascript dentro del html', '&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;&#38;lt;&#38;gt;&#13;&#10;&#9;h1&#38;gt;hola mundo&#38;lt;/h1&#38;gt;&#13;&#10;&#9;&#38;lt;img /&#38;gt;&#13;&#10;&#38;lt;/&#38;gt;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;se hace uso de {}&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;{edad &#38;gt; 18 ? &#38;lt;h2&#38;gt;eres mayor de edad&#38;lt;/h2&#38;gt; : &#38;lt;h2&#38;gt;eres menor de edad&#38;lt;/h2&#38;gt;}&#13;&#10;&#38;lt;h1&#38;gt;{&#34;hola mundo&#34;.toUpperCase()}&#38;lt;/h1&#38;gt;&#60;/code&#62;&#60;/pre&#62;', 10, '2022-12-28 20:44:12', NULL),
(124, 'uso de extension react', 'extension de react', '&#60;p&#62;para crear &#60;code&#62;rafcp&#60;/code&#62;&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;import React from &#39;react&#39;&#13;&#10;import PropTypes from &#39;prop-types&#39;&#13;&#10;&#13;&#10;const $1 = (props) =&#38;gt; {&#13;&#10;  return &#38;lt;div&#38;gt;$0&#38;lt;/div&#38;gt;&#13;&#10;}&#13;&#10;&#13;&#10;$1.propTypes = {}&#13;&#10;&#13;&#10;export default $1&#60;/code&#62;&#60;/pre&#62;&#60;h3&#62;&#60;code&#62;rafce&#60;/code&#62;&#60;/h3&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;import React from &#39;react&#39;&#13;&#10;&#13;&#10;const $1 = () =&#38;gt; {&#13;&#10;  return &#38;lt;div&#38;gt;$0&#38;lt;/div&#38;gt;&#13;&#10;}&#13;&#10;&#13;&#10;export default $1&#60;/code&#62;&#60;/pre&#62;', 10, '2022-12-28 20:49:58', NULL),
(125, 'react tailwind', 'react tailwind css', '&#60;p&#62;para instaler con tres dependencias&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;npm install -D tailwindcss postcss autoprefixer&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;generar el archivo de configuracion&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-bash&#34;&#62;npx tailwindcss init -p&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;en el archivo src/index.css&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-css&#34;&#62;@tailwind base;&#13;&#10;@tailwind components;&#13;&#10;@tailwind utilities;&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;abrir el archivo tailwind.config.cjs&#60;/p&#62;&#60;pre&#62;&#60;code class=&#34;language-javascript&#34;&#62;//antes&#13;&#10;module.exports = {&#13;&#10;  content: [],&#13;&#10;  theme: {&#13;&#10;    extend: {},&#13;&#10;  },&#13;&#10;  plugins: [],&#13;&#10;}&#13;&#10;&#13;&#10;//despues&#13;&#10;module.exports = {&#13;&#10;&#9;content: [&#34;./index.html&#34;, &#34;./src/**/*.jsx&#34;],&#13;&#10;&#9;theme: {&#13;&#10;&#9;&#9;extend: {},&#13;&#10;&#9;},&#13;&#10;&#9;plugins: [],&#13;&#10;};&#60;/code&#62;&#60;/pre&#62;&#60;p&#62;&#38;nbsp;&#60;/p&#62;', 10, '2022-12-28 21:11:03', NULL);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `lenguajes`
--

CREATE TABLE `lenguajes` (
  `id` int NOT NULL,
  `name` varchar(100) NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

--
-- Volcado de datos para la tabla `lenguajes`
--

INSERT INTO `lenguajes` (`id`, `name`, `created_at`, `updated_at`) VALUES
(1, 'php', '2022-11-06 22:29:10', NULL),
(3, 'javascript', '2022-11-06 22:39:24', NULL),
(4, 'comparar', '2022-11-07 13:10:48', '2022-11-07 13:11:04'),
(5, 'laravel', '2022-11-07 15:04:46', NULL),
(6, 'css', '2022-11-07 18:11:33', NULL),
(7, 'bootstrap', '2022-11-07 18:11:46', NULL),
(8, 'git', '2022-12-15 23:46:39', NULL),
(9, 'TypeScript', '2022-12-16 18:29:46', NULL),
(10, 'react.js', '2022-12-28 19:45:30', NULL);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `codigos`
--
ALTER TABLE `codigos`
  ADD PRIMARY KEY (`id`),
  ADD KEY `fk_lenguaje_codigo` (`lenguaje_id`);

--
-- Indices de la tabla `lenguajes`
--
ALTER TABLE `lenguajes`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `codigos`
--
ALTER TABLE `codigos`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=126;

--
-- AUTO_INCREMENT de la tabla `lenguajes`
--
ALTER TABLE `lenguajes`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=11;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `codigos`
--
ALTER TABLE `codigos`
  ADD CONSTRAINT `fk_lenguaje_codigo` FOREIGN KEY (`lenguaje_id`) REFERENCES `lenguajes` (`id`) ON DELETE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
